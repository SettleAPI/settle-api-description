openapi: 3.0.2
info:
  title: Funding Source API Example
  description: Example of an API adhering to the requirements for exposing internal accounts as funding sources for Settle users
  version: 1.0.0
  contact:
    name: Settle
    url: https://www.settle.eu
    email: support@settle.eu
externalDocs:
  description: Latest update is published here
  url: https://github.com/SettleAPI/settle-api-specification
servers:
  - url: https://api.server.test
paths:
  /v1/accounts:
    get:
      summary: Read account list
      description: List all accessible accounts for authenticated user
      operationId: account_list
      parameters:
      - $ref: "#/components/parameters/cursor"
      responses:
        200:
          description: List of client accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountList"
        401:
          description: |-
            Requester is not authorized to use endpoint:
              * error.apikey.missing = Missing API key. This operation requires API key, but it was missing.
              * error.token = Unspecified error with supplied token.
              * error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.
              * error.token.expired = Access token has expired.
          headers:
            WWW-Authenticate:
              description: Authentication method that should be used to gain access
                to a resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
        500:
          description: Internal server error
          content: {}
        501:
          description: Listing accounts is not enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
  /v1/accounts/{account_id}:
    get:
      operationId: account_details
      summary: Get account details by account id
      parameters:
      - $ref: "#/components/parameters/accountId"
      responses:
        200:
          description: Details about a single client account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetails"
        401:
          description: Requester is not authorized to use endpoint
          headers:
            WWW-Authenticate:
              description: Authentication method that should be used to gain access
                to a resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
        404:
          description: The requested account does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
        500:
          description: Internal server error
          content: {}
        501:
          description: Viewing account details is not enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
  /v1/accounts/{account_id}/transactions:
    get:
      summary: Get transactions for an account
      operationId: account_transactions
      parameters:
      - $ref: "#/components/parameters/cursor"
      - name: account_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Transactions for an account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTransactionList"
        400:
          description: Bad request data
          content: {}
        401:
          description: Requester is not authorized to view account transactions
          headers:
            WWW-Authenticate:
              description: Authentication method that should be used to gain access
                to a resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
        404:
          description: The requested account does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
        500:
          description: Internal server error
          content: {}
        501:
          description: Listing account transactions is not enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountErrorResponse"
  /v1/transfers/{transfer_type}:
    get:
      summary: Get list of transfer requests
      operationId: get_transfers
      parameters:
      - $ref: "#/components/parameters/transferType"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferListResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        401:
          description: |-
            Unauthorized with failure code:
            * error.apikey.missing = Missing API key. This operation requires API key, but it was missing.
            * error.token = Unspecified error with supplied token.
            * error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.
            * error.token.expired = Access token has expired.
          headers:
            WWW-Authenticate:
              description: Authentication method that should be used to gain access
                to a resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        403:
          description: |-
            Forbidden with failure code:
            * error.resource.denied = Requested resource is not authorized by access token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        500:
          description: Internal server error
          content: {}
    post:
      summary: Initiate transfer
      operationId: transfer_request
      parameters:
      - $ref: "#/components/parameters/transferType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        401:
          description: |-
            Unauthorized with failure code:
            * error.apikey.missing = Missing API key. This operation requires API key, but it was missing.
            * error.token = Unspecified error with supplied token.
            * error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.
            * error.token.expired = Access token has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        403:
          description: |-
            Forbidden with failure code:
            * error.resource.denied = Requested resource is not authorized by access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        409:
          description: Request data has conflict with a preciously stored transfer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        500:
          description: Internal error when processing transfer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        504:
          description: Transfer accepted but timed out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"

  /v1/transfers/{transfer_type}/confirm:
    put:
      summary: Confirm previously initiated transfers
      operationId: confirm_transfers
      parameters:
      - $ref: "#/components/parameters/transferType"
      requestBody:
        description: Confirm multiple transfer requests
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmTransferListRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferListResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        401:
          description: |-
            Unauthorized with failure code:
            * error.apikey.missing = Missing API key. This operation requires API key, but it was missing.
            * error.token = Unspecified error with supplied token.
            * error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.
            * error.token.expired = Access token has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        403:
          description: |-
            Forbidden with failure code:
            * error.resource.denied = Requested resource is not authorized by access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        409:
          description: Request data has conflict with a preciously stored transfer request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        500:
          description: Internal error when processing request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
  /v1/transfers/{transfer_type}/{request_id}:
    get:
      summary: Get transfer by request id
      operationId: transfer_details
      parameters:
      - $ref: "#/components/parameters/transferType"
      - $ref: "#/components/parameters/transferRequestId"
      responses:
        200:
          description: Transfer has been finished processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferResponse"
        201:
          description: Transfer has been successfully handled and finished processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferResponse"
        202:
          description: Transfer has been accepted but not finished processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferResponse"
        400:
          description: Raised when input data is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        401:
          description: Requester is not authorized to use endpoint
          headers:
            WWW-Authenticate:
              description: Authentication method that should be used to gain access
                to a resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        500:
          description: Internal server error
          content: {}
    delete:
      summary: Delete unconfirmed transfers
      operationId: delete_transfer
      parameters:
      - $ref: "#/components/parameters/transferType"
      - $ref: "#/components/parameters/transferRequestId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        401:
          description: |-
            Unauthorized with failure code:
            * error.apikey.missing = Missing API key. This operation requires API key, but it was missing.
            * error.token = Unspecified error with supplied token.
            * error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.
            * error.token.expired = Access token has expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        403:
          description: |-
            Forbidden with failure code:
            * error.resource.denied = Requested resource is not authorized by access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferErrorResponse'
        409:
          description: Request data has conflict with a preciously stored transfer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
        500:
          description: Internal error when processing request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferErrorResponse"
components:
  schemas:
    Currency:
      type: string
      description: Currency of the account (ISO 4217)
      enum:
      - EUR
    AccountIdentifier:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: Account identifier
          example: NO3058000034304043
        type:
          type: string
          description: Account identifier type
          example: IBAN
      description: Account identifier and it"s type
    AccountAddress:
      required:
      - address
      - city
      - country
      - name
      type: object
      properties:
        name:
          type: string
          description: Account associated name
        address:
          type: string
          description: Account address type
        city:
          minLength: 3
          type: string
          description: Account address city
        country:
          type: string
          description: Account country
      description: Account address and it"s type
    AccountFinancialInstitution:
      required:
      - bic
      - country
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of financial institution holding the account
        bic:
          type: string
          description: Business identifier code
        country:
          type: string
          description: Home country of financial institution where account is located
      description: ""
    AccountTransaction:
      required:
      - _type
      - transaction_id
      - amount
      - booked_date
      - credit_account
      - currency
      - debit_account
      - value_date
      type: object
      properties:
        _type:
          type: string
          default: transfer
        transaction_id:
          type: string
          description: Global identifier of the transaction
        credit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        debit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        amount:
          type: integer
          description: Amount of transfer in cents
          format: int64
        currency:
          $ref: "#/components/schemas/Currency"
        booked_date:
          type: string
          description: Date when transfer has been initiated
        value_date:
          type: string
          description: Date when transfer to an account is considered effective
        extra_fields:
          type: object
          properties: {}
          description: Extra fields provided by the account information provider
      description: ""
    AccountProviderFields:
      required:
      - account_owner
      - account_owner_name
      - account_type
      - provider
      - provider_version
      type: object
      properties:
        account_owner:
          type: string
          description: Account holder id, typically social security number
        account_owner_name:
          type: string
          description: Name of the account holder
        account_type:
          type: string
          description: Account type (usually credit or debit)
        extra_fields:
          type: object
          properties: {}
          description: Extra fields provided py the account information provider
        provider:
          type: string
          description: Identifier of the account information provider
        provider_version:
          type: string
          description: API version used to get account information from provider
      description: ""
    AccountDetails:
      required:
      - _type
      - id
      - account_name
      - account_numbers
      - account_type
      - balance_available
      - balance_booked
      - currency
      - financial_institution
      - identifiers
      - provider_fields
      - status
      type: object
      properties:
        _type:
          type: string
          description: Object type identifier
          default: account
        id:
          type: string
          description: Internal, technical account identifier
        account_name:
          type: string
          description: Account name, possibly set by the user
        account_type:
          type: string
          description: Type of account
          enum:
          - Savings
          - Current
          - Credit
        account_identifiers:
          type: array
          description: Account numbers
          items:
            $ref: "#/components/schemas/AccountIdentifier"
        currency:
          $ref: "#/components/schemas/Currency"
        country:
          type: string
          description: Country code where the account is held (ISO ALPHA-2)
          enum:
          - NO
          - BG
          - HR
        credit_limit:
          type: number
          description: Amount of credit extended to account holder beyond account
            booked balance
        balance_available:
          type: integer
          description: Available balance indicates the funds which are available to
            the account holder at the time of the query
          format: int64
        balance_booked:
          type: integer
          description: Booked balance includes all transfers entered on the account
            at the time of the query
          format: int64
        status:
          type: string
          description: Status of account
          enum:
          - OPEN
          - CLOSED
        financial_institution:
          $ref: "#/components/schemas/AccountFinancialInstitution"
      description: Account object
    AccountList:
      required:
      - pagination
      - items
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          description: List of accounts
          items:
            $ref: "#/components/schemas/AccountDetails"
      description: List of accounts for the authenticated user
    AccountTransactionList:
      required:
      - pagination
      - items
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          description: List of transfers
          items:
            $ref: "#/components/schemas/AccountTransaction"
      description: List transfer history of a give account
    Address:
      type: object
      properties:
        address_line1:
          type: string
        address_line2:
          type: string
        city:
          type: string
        postalcode:
          type: integer
        country:
          type: string
      description: It is required only for SEPA transfers.
    ConfirmTransferListRequest:
      required:
        - transfer_list
      type: object
      properties:
        transfer_list:
          type: array
          description: A list of transfer ids to be confirmed
          items:
            type: string
    TransferRequest:
      required:
      - amount
      - credit_account
      - currency
      - debit_account
      - message
      - request_id
      type: object
      properties:
        request_id:
          type: string
          description: The local identifier for this transfer (idempotency). SHOULD
            be unique for each client
        debit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        credit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        amount:
          type: integer
          description: Amount to transfer, as an integer number of cents
          format: int64
        currency:
          $ref: "#/components/schemas/Currency"
        message:
          type: string
          description: Message attached to the transfer
        address:
          $ref: "#/components/schemas/Address"
      description: Initiate a transfer between to accounts
    TransferResponse:
      required:
      - _type
      - amount
      - credit_account
      - currency
      - debit_account
      - transaction_id
      - request_id
      - status
      - value_date
      type: object
      properties:
        _type:
          type: string
          description: Object type identifier
          default: transfer
        transaction_id:
          type: string
          description: Global identifier of the transaction
        request_id:
          maxLength: 24
          type: string
          description: The local identifier for this transfer request (idempotency)
        debit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        credit_account:
          $ref: "#/components/schemas/AccountIdentifier"
        amount:
          type: integer
          description: Amount to transfer, as an integer number of cents
          format: int64
        currency:
          $ref: "#/components/schemas/Currency"
        message:
          type: string
          description: Message attached to the transfer
        status:
          type: string
          description: The current state the transfer is in
          enum:
          - PendingConfirmation
          - PendingUserApproval
          - OnHold
          - Confirmed
          - Rejected
          - Paid
          - InsufficientFunds
          - LimitExceeded
          - UserApprovalFailed
          - UserApprovalTimeout
          - UserApprovalCancelled
          - Unknown
        value_date:
          type: string
          description: When the transfer was initiated
          format: date-time
        provider_fields:
          $ref: "#/components/schemas/AccountProviderFields"
      description: Response to a transfer request
    TransferListResponse:
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          description: List of transfers
          items:
            $ref: "#/components/schemas/TransferResponse"
      description: Response to a list transfer request
    DeleteTransfersResponse:
      title: DeleteTransfersResponse
      type: object
      properties:
        errors:
          type: array
          description: Response errors
          items:
            $ref: '#/components/schemas/TransferError'
        response:
          type: array
          description: Payload
          items:
            type: string
      description: Delete transfers response
    TransferError:
      required:
      - error
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResponseDetail"
        request_id:
          type: string
          description: Transfer ID
      description: Response scheme when transfer operations results in error
    ErrorResponseDetail:
      required:
      - code
      - description
      - name
      type: object
      properties:
        name:
          type: string
          description: Short name describing error
        description:
          type: string
          description: Description of the error
        code:
          type: integer
          description: Code representation of the error type
        permanent:
          type: boolean
          description: If the error is permanent or not
      description: ""
    AccountErrorResponse:
      required:
      - error
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResponseDetail"
      description: Response scheme when an account operation failed
    TransferErrorResponse:
      required:
      - error
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResponseDetail"
      description: Response scheme when a transfer operation failed
    Pagination:
      title: Pagination
      type: object
      properties:
        cursor:
          type: string
          description: Resource listing may return a `cursor` if there"s more
            results available. The request may then be retried with the `cursor`, but
            otherwise same parameters, in order to get more results.
      description: Details of paginated response
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    fs_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.org/api/oauth/dialog
          scopes:
            pi: initiate transfers
            ai: read account data
  parameters:
    accountId:
      name: account_id
      in: path
      required: true
      schema:
        type: string
    transferType:
      name: transfer_type
      in: path
      required: true
      schema:
        type: string
        enum:
        - sepa
        - domestic
    transferRequestId:
      name: request_id
      in: path
      required: true
      schema:
        type: string
    cursor:
      name: cursor
      in: query
      description: Resource listing may return a `cursor` if there"s more
            results available. The request may then be retried with the `cursor`, but
            otherwise same parameters, in order to get more results.
      schema:
        type: string
  requestBodies:
    transfer:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransferRequest"
      required: true
