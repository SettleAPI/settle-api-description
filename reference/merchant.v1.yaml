openapi: 3.0.0
info:
  title: merchant
  version: '1.0'
  contact:
    name: Settle Group
    url: 'https://settle.eu'
    email: support+dev@settle.eu
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/SettleAPI/settle-api-description/main/LICENSE'
  description: |-
    # Settle APIs
    The Settle APIs enables merchants to interact with Settle, registering POS', create shortlinks for QR-scans, send payment requests, submit permission requests for end user info, and much more

    ## Service Endpoints
    A service endpoint is a base URL that specifies the network address of an API service. One service might have multiple service endpoints.

    - **Production**: https://api.settle.eu
    - **Sandbox**: https://api.sandbox.settle.eu

    ## REST Resources
    The above services has the following resources, and all methods below are relative to its parent method (service endpoint).

    ### merchant.apiKeys
    - [merchant.apiKeys.create](./b3A6MTUzOTU0MDk-merchant-api-keys-create)
    - [merchant.apiKeys.list](./b3A6MTUzOTU0MDg-merchant-api-keys-list)
    - [merchant.apiKeys.get](./b3A6MTUzOTU0NDQ-merchant-api-keys-get)
    - [merchant.apiKeys.update](./b3A6MTUzOTU0NDI-merchant-api-keys-update)
    - [merchant.apiKeys.delete](./b3A6MTUzOTU0NDM-merchant-api-keys-delete)
servers:
  - url: 'https://api.sandbox.settle.eu/merchant/v1'
    description: Sandbox
  - url: 'https://api.settle.eu/merchant/v1'
    description: Production
paths:
  /api_key:
    get:
      summary: merchant.apiKeys.list
      tags:
        - Authentication
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: merchant.apiKeys.list
      description: List Merchant API Keys
    post:
      summary: merchant.apiKeys.create
      operationId: merchant.apiKeys.create
      responses:
        '201':
          $ref: '#/components/responses/apiKeys.create.201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Conflict
      description: Create API Key for the Merchant given in the `X-Settle-Merchant` header.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiKeys.create'
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Authentication
  '/api_key/{api_user_id}':
    parameters:
      - $ref: '#/components/parameters/api_user_id'
    put:
      summary: merchant.apiKeys.update
      operationId: merchant.apiKeys.update
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/404'
      description: Update API Key
      tags:
        - Authentication
    delete:
      summary: merchant.apiKeys.delete
      operationId: merchant.apiKeys.delete
      responses:
        '204':
          description: No Content
      description: Delete API Key
      tags:
        - Authentication
    get:
      summary: merchant.apiKeys.get
      operationId: merchant.apiKeys.get
      responses:
        '200':
          description: OK
      description: Get API Key
      tags:
        - Authentication
  /payment_request:
    post:
      summary: merchant.payment.request.create
      operationId: merchant.payment.request.create
      responses:
        '200':
          $ref: '#/components/responses/payment.request.create.200'
        '201':
          $ref: '#/components/responses/payment.request.create.201'
        '400':
          description: 'Bad Request, validation error.'
        '409':
          description: 'Conflict, same pos_id and pos_tid used for a request earlier.'
      description: |-
        Create a Payment Request.

        The call is idempotent; that is, if one posts the same pos_id and pos_tid twice, only one payment request is created.
      parameters:
        - schema:
            type: string
            default: application/vnd.mcash.api.merchant.v1+json
          in: header
          name: Accept
          required: true
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            example: fzkmhy0q
          in: header
          name: X-Auka-Merchant
          required: true
          description: This header should contain the Settle ID of the merchant as returned in the id field of the merchant endpoint.
        - schema:
            type: string
            example: wtvrad79
          in: header
          name: X-Auka-User
          required: true
          description: The ID (username) of the user/client doing the request on behalf of the merchant. Users are created by the merchant through the Self Service Portal or by the integrator using the user endpoint. Each user has is an ID locally unique for the merchant and is assigned a shared secret and/or a RSA public key that is used for authentication.
        - schema:
            type: string
            example: '2021-03-28 18:06:05'
          in: header
          name: X-Auka-Timestamp
          required: true
          description: 'The current UTC time. The time format is YYYY-MM-DD hh:mm:ss.'
        - schema:
            type: string
            example: SHA256=47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=
          in: header
          name: X-Auka-Content-Digest
          required: true
          description: 'The base64 encoded hash digest of the request body. If the body is empty, the hash should be computed on an empty string. The value of the header should be on the form {algorithm (uppercase)}={digest value}.'
        - schema:
            type: string
            example: RSA-SHA256 R/O6YTy/QBgxHpNxSGCDKg8TKONtCof0jVDuqAkdLGsEdLrDQO7+9EZnDZ+x/Ce0e/F+dTfgbBujKN1zRoZzw2mlStIxTa9/kKTQ4IEZH+ym9z9dv6ZA+R17JN+/yT56O1O50pQbhIfk4ibln4bf3iwkodyP2fFIuBZ74CUeS0Q=
          in: header
          name: Authorization
          required: true
          description: The value of this field depends on what kind of authentication scheme is being used. Currently the supported schemes are SECRET and RSA-SHA256.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.create'
            examples:
              Example:
                value:
                  action: SALE
                  additional_amount: 0
                  additional_edit: false
                  allow_credit: true
                  amount: 0
                  callback_uri: 'null'
                  cid: 'null'
                  currency:
                    alph_code: 'null'
                    num_code: 3
                  customer: 'null'
                  display_message_uri: 'null'
                  expires_in: 21600
                  failure_return_uri: 'null'
                  line_items:
                    product_id: string
                    description: string
                    metadata:
                      key: string
                      value: string
                    vat_rate: 'null'
                    quantity: string
                    vat: 0
                    item_cost: 0
                    total: 0
                  links:
                    uri: 'null'
                    caption: 'null'
                    show_on: 'null'
                  max_scan_age: 60
                  pos_id: string
                  pos_tid: string
                  required_scope:
                    scopes: address
                  required_scope_text: 'null'
                  success_return_uri: 'null'
                  text: 'null'
                  uri: 'null'
                  'null': string
                  scope:
                    scopes: address
      tags:
        - Payments
    get:
      summary: merchant.payment.request.list
      operationId: merchant.payment.request.list
      responses:
        '200':
          $ref: '#/components/responses/payment.request.list.200'
      description: List Payment Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.list'
      tags:
        - Payments
  '/payment_request/{tid}/outcome':
    parameters:
      - $ref: '#/components/parameters/tid'
    get:
      summary: merchant.payment.request.outcome.get
      responses:
        '200':
          description: OK
        '404':
          description: TID not found (or unauthorized for this merchant)
      operationId: merchant.payment.request.outcome.get
      description: |-
        Shows the outcome info for a Payment Request, ReAuth or Capture.

        This endpoints includes specified fee and/or interchange that will be deducted from payout, and also updated additional amount field if the user added gratuity.

        If the callback URI registered for the payment request was secure (https), the contents of this form was sent along with the callback. If the callback URI was insecure, a notification pointing to this endpoint was sent instead.
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.outcome.get'
        description: Retrieve payment request outcome
  '/payment_request/{tid}':
    parameters:
      - $ref: '#/components/parameters/tid'
    put:
      summary: merchant.payment.request.update
      operationId: merchant.payment.request.update
      responses:
        '204':
          description: 'OK, (no content).'
        '400':
          description: 'Bad Request, illegal input.'
        '409':
          description: 'Conflict, illegal action at this time (capture before authorization, abort after capture).'
      description: |-
        Update, reauthorize, capture, release or abort payment request.

        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, additional_amount and capture_id twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action CAPTURE without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the REFUND action will require that the API call is made with the KEY authorization mode, not SECRET.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.update'
            examples:
              example-1: {}
      tags:
        - Payments
      parameters: []
    get:
      summary: merchant.payment.request.get
      operationId: merchant.payment.request.get
      responses:
        '200':
          description: OK
      description: Retrieve payment request info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.get'
        description: Retrieve payment request info
      tags:
        - Payments
  /pos:
    post:
      summary: merchant.pos.create
      operationId: merchant.pos.create
      responses:
        '201':
          $ref: '#/components/responses/pos.create.201'
        '400':
          description: 'Bad Request, validation error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    error_detail: null
                    error_type: Conflict
                    error_description: POS with ID "5rg1dkk8|9469f42f-8acf-43a8-ac28-bb64c8a994bd" already exists
                properties:
                  error_detail: {}
                  error_type:
                    type: string
                    minLength: 1
                  error_description:
                    type: string
                    minLength: 1
              examples:
                POS exists:
                  value:
                    error_detail: null
                    error_type: Conflict
                    error_description: POS with ID "5rg1dkk8|9469f42f-8acf-43a8-ac28-bb64c8a994bd" already exists
      description: Create POS resource
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pos.create'
      tags:
        - Pos
    get:
      summary: merchant.pos.list
      operationId: merchant.pos.list
      responses:
        '200':
          $ref: '#/components/responses/pos.list.200'
      description: List all Point of Sales for merchant.
      tags:
        - Pos
  '/pos/{pos_id}':
    parameters:
      - $ref: '#/components/parameters/pos_id'
    put:
      summary: merchant.pos.update
      operationId: merchant.pos.update
      responses:
        '204':
          description: No Content
        '400':
          description: 'Bad request, validation error'
      description: Update POS resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pos.update'
      tags:
        - Pos
    delete:
      summary: merchant.pos.delete
      operationId: merchant.pos.delete
      responses:
        '204':
          description: No Content
      description: Delete POS
      tags:
        - Pos
    get:
      summary: merchant.pos.get
      operationId: merchant.pos.get
      responses:
        '200':
          $ref: '#/components/responses/pos.get.200'
      description: Retrieve POS info.
      tags:
        - Pos
  '/merchant/{merchant_id}':
    parameters:
      - $ref: '#/components/parameters/merchant_id'
    get:
      summary: merchant.profile.get
      tags:
        - Merchant
      responses: {}
      operationId: merchant.profile.get
      description: Get merchant info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile.get'
      deprecated: true
  '/merchant_lookup/{lookup_id}':
    parameters:
      - $ref: '#/components/parameters/lookup_id'
    get:
      summary: merchant.profile.lookup
      responses: {}
      operationId: merchant.profile.lookup
      description: Handle merchant lookup on secondary ID. This is endpoint can only be used by integrators.
      tags:
        - Merchant
  /sales_summary: {}
  /settlement: {}
  '/settlement/{settlement_id}':
    parameters:
      - $ref: '#/components/parameters/settlement_id'
    get:
      summary: merchant.settlement.get
      tags:
        - Settlement
      responses:
        '200':
          $ref: '#/components/responses/settlement.get.200'
        '404':
          $ref: '#/components/responses/settlement.get.404'
      operationId: merchant.settlement.get
      description: 'Retrieve information regarding one settlement. The settlement contains detailed information about the amount paid out in the payout_details form. In case merchant has unsettled fees from previous settlements, Settle will attempt to settle these before paying out. If there are still unsettled fees after settlement is done, this amount will be transferred to the next settlement, or billed by Settle.'
  /last_settlement:
    get:
      summary: merchant.settlement.latest.get
      tags:
        - Settlement
      responses:
        '200':
          $ref: '#/components/responses/settlement.latest.get.200'
        '404':
          description: Not Found
      operationId: merchant.settlement.latest.get
      description: |-
        This endpoint redirects to the latest Settlement.

        Whenever a new Settlement is generated, this reference is automatically updated.
      deprecated: true
      x-internal: true
  '/settlement_account/{settlement_account_id}':
    parameters:
      - $ref: '#/components/parameters/settlement_account_id'
    put:
      summary: merchant.settlement.account.update
      operationId: merchant.settlement.account.update
      description: Updates a SettlementAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settlement.account.update'
        description: Updates a SettlementAccount.
      tags:
        - Settlement
      deprecated: true
      x-internal: true
  /settlement_report:
    get:
      summary: merchant.settlement.report.get
      tags:
        - Settlement
      responses:
        '200':
          $ref: '#/components/responses/settlement.report.get.200'
      operationId: merchant.settlement.report.get
      description: Endpoint accepts arguments for filtering the list of settlements and can omit empty settlements.
      deprecated: true
      x-internal: true
  /shortlink:
    get:
      summary: merchant.shortlink.list
      tags:
        - Shortlink
      operationId: merchant.shortlink.list
      parameters: []
      description: List shortlink registrations.
      responses:
        '200':
          $ref: '#/components/responses/shortlink.list.200'
    post:
      summary: merchant.shortlink.create
      operationId: merchant.shortlink.create
      responses:
        '201':
          $ref: '#/components/responses/shortlink.create.201'
        '400':
          $ref: '#/components/responses/shortlink.create.400'
      description: Register new shortlink.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortlink.create'
      tags:
        - Shortlink
  '/shortlink/{shortlink_id}':
    parameters:
      - $ref: '#/components/parameters/shortlink_id'
    get:
      summary: merchant.shortlink.get
      tags:
        - Shortlink
      responses:
        '200':
          $ref: '#/components/responses/shortlink.get.200'
      operationId: merchant.shortlink.get
      description: Retrieve registered shortlink info.
    put:
      summary: merchant.shortlink.update
      operationId: merchant.shortlink.update
      responses:
        '200':
          $ref: '#/components/responses/shortlink.update.200'
        '204':
          $ref: '#/components/responses/shortlink.update.204'
        '400':
          $ref: '#/components/responses/shortlink.update.400'
      description: Update existing shortlink registration.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortlink.update'
      tags:
        - Shortlink
    delete:
      summary: merchant.shortlink.delete
      operationId: merchant.shortlink.delete
      responses:
        '204':
          $ref: '#/components/responses/shortlink.delete.204'
      description: Delete shortlink
      tags:
        - Shortlink
  /merchant_ssp_user:
    post:
      summary: merchant.ssp.users.create
      tags:
        - Self Service Portal
      responses:
        '201':
          $ref: '#/components/responses/ssp.users.create.201'
        '409':
          $ref: '#/components/responses/ssp.users.create.409'
      operationId: merchant.ssp.users.create
      description: Creates a MerchantSspUser.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ssp.users.create'
        description: 'Returns 201 CREATED (unless a user with the same email already exists, which results in a 409 CONFLICT response).'
      x-internal: true
    get:
      summary: merchant.ssp.users.list
      tags:
        - Self Service Portal
      operationId: merchant.ssp.users.list
      description: Lists Merchant SSP Users.
      responses:
        '200':
          $ref: '#/components/responses/ssp.users.get.200'
      x-internal: true
  /status_code:
    get:
      summary: merchant.statusCodes.list
      tags:
        - Status Codes
      responses:
        '200':
          $ref: '#/components/responses/statusCodes.list.200'
      operationId: merchant.statusCodes.list
      description: List Status Codes
  '/status_code/{status_code}':
    parameters:
      - $ref: '#/components/parameters/status_code'
    get:
      summary: merchant.statusCodes.get
      tags:
        - Status Codes
      responses:
        '200':
          $ref: '#/components/responses/statusCodes.get.200'
      operationId: merchant.statusCodes.get
      description: Get details about a spesific Status Code
  /payment_send:
    post:
      summary: merchant.payment.send.create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: p8bgxt1a0rzp
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    error_detail: null
                    error_type: Bad Request
                    error_description: Insufficient funds
                properties:
                  error_detail:
                    type: string
                  error_type:
                    type: string
                  error_description:
                    type: string
              examples:
                Insufficient funds:
                  value:
                    error_detail: null
                    error_type: Bad Request
                    error_description: Insufficient funds
          headers: {}
        '401':
          description: Unauthorized
      description: Send payment
      operationId: merchant.payment.send.create
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.send.create'
  '/payment_send/{tid}/outcome':
    parameters:
      - $ref: '#/components/parameters/tid'
    get:
      summary: merchant.payment.send.outcome.get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    object:
                      idempotency_id: 63de8b62-dac3-4ec1-8da3-1093e561583a
                      payer: 5rg1dkk8
                      currency: NOK
                      timestamp: '2021-06-22 09:14:26'
                      require_identified: false
                      id: p13fjg6py9jw
                      payee: 'msisdn:4798052301'
                      amount: 1000
                      payer_status: ok
                      chat_text: Cumque illo ut est ex unde.
                    type: payment
                properties:
                  object:
                    type: object
                    properties:
                      idempotency_id:
                        type: string
                        minLength: 1
                      payer:
                        $ref: ../models/PersonIdentifier.v1.yaml
                      currency:
                        $ref: ../models/Currency.v1.yaml
                      timestamp:
                        type: string
                        minLength: 1
                      require_identified:
                        type: boolean
                      id:
                        type: string
                        minLength: 1
                      payee:
                        type: string
                        minLength: 1
                      amount:
                        $ref: ../models/MoneyInteger.v1.yaml
                      payer_status:
                        type: string
                        minLength: 1
                      chat_text:
                        type: string
                        minLength: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error_detail:
                    type: object
                    properties: {}
                    required: []
                  error_type:
                    type: string
                    minLength: 1
                  error_description:
                    type: string
                    minLength: 1
                required:
                  - error_detail
                  - error_type
                  - error_description
                x-examples:
                  example-1:
                    error_detail: {}
                    error_type: Not Found
                    error_description: no payment request with id p0gv8xc9d3km
              examples:
                No payment found:
                  value:
                    error_detail: {}
                    error_type: Not Found
                    error_description: no payment request with ID xxx
      operationId: merchant.payment.send.outcome.get
      tags:
        - Payments
  '/merchant_ssp_user/{merchant_ssp_user_id}':
    parameters:
      - schema:
          type: string
        name: merchant_ssp_user_id
        in: path
        required: true
    get:
      summary: merchant.ssp.users.get
      tags:
        - Self Service Portal
      responses:
        '200':
          $ref: '#/components/responses/ssp.users.get.200'
      operationId: merchant.ssp.users.get
      description: Gets a MerchantSspUser.
      x-internal: true
    delete:
      summary: merchant.ssp.users.delete
      operationId: merchant.ssp.users.delete
      responses:
        '204':
          description: No Content
      description: |-
        Deletes a MerchantSspUser and returns 204 NO CONTENT

        Currently only deletes if MerchantSspUser does not have any LegalEntities to avoid side effects Used to avoid inconsistencies between core and merchant console.
      x-internal: true
      tags:
        - Self Service Portal
  '/merchant/{merchant_id}/balance':
    parameters:
      - name: merchant_id
        in: path
        required: true
        schema:
          type: string
        description: Merchant id assigned by Settle.
    get:
      summary: merchant.balance.get
      tags:
        - Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    currency: NOK
                    amount: 99999000
                properties:
                  currency:
                    type: string
                  amount:
                    type: number
              examples: {}
      operationId: merchant.balance.get
      description: Get Merchant Account Balance
  '/merchant/{merchant_id}/logo':
    parameters:
      - $ref: '#/components/parameters/merchant_id'
  /permission_request:
    post:
      summary: merchant.permissions.request.create
      operationId: merchant.permissions.request.create
      responses:
        '200':
          description: 'OK, identical permission request already created'
        '201':
          description: Permission request created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                required:
                  - id
                x-examples:
                  example-1:
                    id: vrqx1f7hp4pbvqgwecxhuwv3hbngnb6a
        '400':
          description: 'Bad request, validation error'
        '404':
          description: Permission request not found
      description: |-
        Create permission request.

        The call is idempotent; that is, if there is an approved permission request with the same scopes.
      tags:
        - Permission Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/permissions.request.create'
  '/permission_request/{rid}':
    parameters:
      - $ref: '#/components/parameters/rid'
    get:
      summary: merchant.permissions.request.get
      tags:
        - Permission Requests
      responses:
        '200':
          $ref: '#/components/responses/permissions.request.get.200'
        '404':
          description: Permission request not found
      operationId: merchant.permissions.request.get
      description: See permission request info
  '/permission_request/{rid}/outcome':
    parameters:
      - $ref: '#/components/parameters/rid'
    get:
      summary: merchant.permissions.request.outcome.get
      operationId: merchant.permissions.request.outcome.get
      responses:
        '200':
          $ref: '#/components/responses/permissions.request.outcome.get.200'
        '404':
          description: Permission request not found
      description: Get the outcome of the permission request
      tags:
        - Permission Requests
components:
  schemas:
    payment.request.create:
      title: 'Request Body: merchant.payment.request.create'
      type: object
      x-tags:
        - Schemas
      description: 'A payment request goes through several stages. After being registered, the customer can either reject or authorize. An authorization is valid for 3 days, but can be reauthorized before it expires to be valid for 3 new days. Once authorized, it can be captured to be included in the next settlement.'
      x-examples:
        Example:
          action: SALE
          additional_amount: 0
          additional_edit: false
          allow_credit: true
          amount: 0
          callback_uri: 'null'
          cid: 'null'
          currency:
            alph_code: 'null'
            num_code: 3
          customer: 'null'
          display_message_uri: 'null'
          expires_in: 21600
          failure_return_uri: 'null'
          line_items:
            product_id: string
            description: string
            metadata:
              key: string
              value: string
            vat_rate: 'null'
            quantity: string
            vat: 0
            item_cost: 0
            total: 0
          links:
            uri: 'null'
            caption: 'null'
            show_on: 'null'
          max_scan_age: 60
          pos_id: string
          pos_tid: string
          required_scope:
            scopes: address
          required_scope_text: 'null'
          success_return_uri: 'null'
          text: 'null'
          uri: 'null'
          'null': string
          scope:
            scopes: address
      properties:
        action:
          type: string
          description: 'Action to perform, the main difference is what it looks like in App UI.'
          enum:
            - SALE
            - AUTH
            - sale
            - auth
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_edit:
          type: boolean
          default: false
          description: Whether user is allowed to additional amount for gratuity or similar.
        allow_credit:
          type: boolean
          description: Whether to allow credit payment for this payment request. Credit incurs interchange.
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        callback_uri:
          type: string
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the object part of the message is the same as what can be retrieved by calling GET on the /payment_request/{tid}/outcome/ resource URI.'
        cid:
          type: string
          default: 'null'
          description: Customer ID to be used for KID payments.
        currency:
          $ref: ../models/Currency.v1.yaml
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        display_message_uri:
          type: string
          description: Messages that can be used to inform the POS operator about the progress of the payment request will be posted to this URI if provided.
          default: 'null'
        expires_in:
          type: integer
          default: 21600
          minimum: 0
          maximum: 2592000
        failure_return_uri:
          type: string
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          description: Return URL if payment failed.
        line_items:
          $ref: ../models/LineItem.v1.yaml
        links:
          $ref: ../models/PaymentRequestLink.v1.yaml
        pos_id:
          type: string
          description: 'The POS this payment request originates from, used for informing user about origin.'
          maxLength: 64
          pattern: '^[a-zA-Z0-9_.-]+$'
        pos_tid:
          type: string
          description: Local transaction id for POS. This must be unique for the POS.
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        required_scope:
          $ref: ../models/Scope.v1.yaml
        required_scope_text:
          type: string
          description: Text that is shown to user when asked for permission. This can contain line breaks and the text has to fit on smartphones screens.
          default: 'null'
          maxLength: 150
        success_return_uri:
          type: string
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          default: 'null'
          description: Return URL if payment successful.
        text:
          type: string
          description: Text that is shown to user when asked to pay. This can contain line breaks and the text has to fit on smartphones screens.
          default: 'null'
        uri:
          type: string
          description: 'If payment request was posted without a customer, user can claim it on this URI.'
          default: 'null'
        scope:
          $ref: ../models/Scope.v1.yaml
      required:
        - action
        - allow_credit
        - amount
        - currency
        - pos_id
        - pos_tid
    payment.request.outcome.get:
      title: 'Request Body: merchant.payment.request.outcome.get'
      type: object
      x-tags:
        - Schemas
      description: ''
      properties:
        currency:
          $ref: ../models/Currency.v1.yaml
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        auth_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        auth_additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        captures:
          $ref: ../models/Capture.yaml
        refunds:
          $ref: ../models/Refund.yaml
        status:
          type: string
          description: Payment request status (see above)
          default: 'null'
          enum:
            - ok
            - fail
            - auth
            - pending
        status_code:
          type: integer
          description: Payment request status code (see above).
          default: null
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        date_modified:
          $ref: ../models/DateTime.yaml
        date_expires:
          $ref: ../models/DateTime.yaml
        credit:
          type: boolean
          default: false
          description: Whether the received payment was a credit payment.
        interchange_fee:
          $ref: ../models/MoneyInteger.v1.yaml
        transaction_fee:
          $ref: ../models/MoneyInteger.v1.yaml
        attachment_uri:
          type: string
          format: uri
          default: 'null'
          description: 'Endpoint for Attachment uploads, such as electronic receipts. This URI has a limited time to live, and a new URI is generated each time outcome is retrieved.'
        pos_id:
          type: string
          description: 'The POS this request originates from, used for informing user about origin'
        pos_tid:
          type: string
          description: |
            Local transaction id for POS. This must be unique for the POS
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        tid:
          type: string
          description: Settle transaction id
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        permissions:
          $ref: ../models/AccessTokenResponse.v1.yaml
      required:
        - pos_id
        - pos_tid
        - tid
    payment.request.update:
      description: |-
        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, additional_amount and capture_id twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action CAPTURE without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the REFUND action will require that the API call is made with the KEY authorization mode, not SECRET.
      type: object
      x-tags:
        - Schemas
      title: 'Request Body: merchant.payment.request.update'
      x-examples: {}
      properties:
        display_message_uri:
          type: string
          description: Messages that can be used to inform the POS operator about the progress of the payment request will be POSTed to this URI if provided.
        callback_uri:
          type: string
          description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the "object" part of the message is the same as what can be retrieved by calling GET on the "/payment_request/{tid}/outcome/" resource URI.'
        line_items:
          $ref: ../models/LineItem.v1.yaml
        action:
          type: string
          enum:
            - reauth
            - capture
            - abort
            - release
            - refund
          description: Action to perform.
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        capture_id:
          type: string
          pattern: '^[a-zA-Z0-9_.-]+$'
          description: 'Local id for capture. Must be set if amount is set, otherwise capture_id must be unset. Ignored unless action is capture. Required if amount, additional_amount, currency are set.'
        refund_id:
          type: string
          description: 'Local id for refund. Must be set if amount is set, otherwise capture_id must be unset.Ignored unless action is refund.Required if amount, additional_amount, currency are set.'
          pattern: '^[a-zA-Z0-9_.-]+$'
        currency:
          $ref: ../models/Currency.v1.yaml
        text:
          type: string
          description: Text that is shown to user upon a refund. This can contain linebreaks and the text has to fit on smartphones screens.
      required:
        - currency
    payment.request.list:
      title: 'Request Body: merchant.payment.request.get'
      type: object
      x-tags:
        - Schemas
      properties:
        created_from:
          $ref: ../models/DateTime.yaml
        created_to:
          $ref: ../models/DateTime.yaml
        cursor:
          $ref: ../models/Cursor.yaml
        page_size:
          type: integer
          default: 100
          description: Page Size
        only_ok:
          type: boolean
          default: false
          description: Only Ok
        status:
          $ref: ../models/SelectMultiple.yaml
    payment.request.get:
      title: 'Request Body: merchant.payment.request.get'
      type: object
      x-tags:
        - Schemas
      description: Retrieve payment request info
      properties:
        id:
          type: string
          description: Transaction ID
        uri:
          type: string
          description: 'If payment request was posted without a customer, user can claim it on this uri'
          format: uri
          default: 'null'
        display_message_uri:
          type: string
          description: Messages that can be used to inform the POS operator about the progress of the payment request will be POSTed to this URI if provided
          default: 'null'
          format: uri
        callback_uri:
          type: string
          description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the "object" part of the message is the same as what can be retrieved by calling GET on the "/payment_request/<tid>/outcome/" resource URI.'
          default: 'null'
          format: uri
        line_items:
          $ref: ../models/LineItem.v1.yaml
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        max_scan_age:
          type: integer
          minimum: 0
          maximum: 2592000
          default: 60
          description: 'Used if customer is set to shortlink_id:xxxx or shortlink_sn:xxxx.Integer number of seconds.The payment request will be assigned to the scantoken created on the shortlink_idor shortlink_sn, no earlier then this number of seconds ago.'
        currency:
          $ref: ../models/Currency.v1.yaml
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_edit:
          type: boolean
          default: false
          description: Whether user is allowed to additional amount for gratuity or similar
        pos_id:
          type: string
          description: 'The POS this payment request originates from, used for informing user about origin'
          maxLength: 64
          pattern: '^[a-zA-Z0-9_.-]+$'
        pos_tid:
          type: string
          description: Local transaction id for POS. This must be unique for the POS
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        text:
          type: string
          description: Text that is shown to user when asked to pay. This can contain linebreaks and the text has tofit on smartphones screens.
          default: 'null'
        success_return_uri:
          type: string
          description: Return url if payment successful
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
        failure_return_uri:
          type: string
          description: |
            Return url if payment failed
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          default: 'null'
        cid:
          type: string
          description: Customer ID to be used for KID payments
          default: 'null'
        links:
          $ref: ../models/PaymentRequestLink.v1.yaml
        date_expires:
          $ref: ../models/DateTime.yaml
        required_scope:
          type: string
          description: Set this field to ask for data from the user together with the payment request.
          default: 'null'
        allow_credit:
          type: boolean
          description: Whether to allow credit payment for this payment request. Credit incurs interchange
      required:
        - id
        - currency
        - pos_id
    pos.create:
      title: 'Request Body: merchant.pos.create'
      type: object
      x-tags:
        - Schemas
      properties:
        name:
          type: string
          description: 'Human-readable name of the POS, used for displaying payment request origin to end user.'
          maxLength: 100
        type:
          type: string
          description: POS type.
          maxLength: 50
          enum:
            - store
            - webshop
            - mobile
            - vending
            - poster
        location:
          $ref: ../models/Location.yaml
        id:
          type: string
          description: The ID of the POS that is to be created. Has to be unique for the merchant.
          maxLength: 100
      required:
        - name
        - type
        - id
    pos.update:
      title: 'Request Body: merchant.pos.update'
      type: object
      x-tags:
        - Schemas
      description: Update POS resource
      properties:
        name:
          type: string
          description: 'Human-readable name of the POS, used for displaying payment request origin to end user.'
          maxLength: 100
        type:
          type: string
          description: POS type.
          maxLength: 50
          enum:
            - store
            - webshop
            - mobile
            - vending
            - poster
        location:
          type: string
          default: 'null'
          description: Merchant location.
      required:
        - name
        - type
      x-examples:
        example-1:
          value:
            name: string
            type: store
            location: 'null'
    profile.get:
      title: 'Request Body: merchant.profile.get'
      type: object
      x-tags:
        - Schemas
      description: Get merchant info
      properties:
        id:
          type: string
          description: ID
          default: 'null'
        legal_entity:
          $ref: ../models/NdbKey.yaml
        business_name:
          type: string
          description: Business Name.
          default: 'null'
        organization_id:
          type: string
          description: Organization ID.
          default: 'null'
        jurisdiction:
          type: string
          description: Jurisdiction.
          default: 'null'
        mcc:
          type: integer
          default: null
          description: Mcc
        integrator:
          $ref: ../models/NdbKey.yaml
        settlement_account:
          $ref: ../models/NdbKey.yaml
        auth_duration:
          type: integer
          default: null
          description: Auth Duration.
        profile:
          $ref: ../models/MerchantProfileRegistration.yaml
        application:
          $ref: ''
        business_documents:
          $ref: ''
        per_payment_amount_limit:
          $ref: ../models/MoneyInteger.v1.yaml
        integration_type:
          type: string
          default: 'null'
          description: Integration Type
        approved:
          type: boolean
          default: false
          description: Approved
    sales.summary.get:
      x-tags:
        - Schemas
      title: 'Request Body: sales.summary'
      type: object
      description: Retrieve sales report.
      properties:
        from_date:
          $ref: ../models/Date.yaml
        to_date:
          $ref: ../models/Date.yaml
        merchant_time:
          description: Merchant Time
          type: boolean
        frequency:
          $ref: ../models/Select.yaml
      required:
        - from_date
    settlement.account.update:
      x-tags:
        - Schemas
      title: 'Request Body: settlement.account.update'
      type: object
      description: Updates a SettlementAccount.
      properties:
        payout_account:
          type: string
          description: Payout Account
        frequency:
          $ref: ../models/SettlementAccountFrequency.yaml
      required:
        - payout_account
    settlement.report.get:
      x-tags:
        - Schemas
      title: 'Request Body: settlement.report.get'
      type: object
      description: Endpoint accepts arguments for filtering the list of settlements and can omit empty settlements.
      properties:
        created_from:
          type: string
          description: Created From
          default: 'null'
        created_to:
          type: string
          description: Created To
          default: 'null'
        non_empty_only:
          type: boolean
          description: Non Empty Only
          default: false
    shortlink.create:
      x-tags:
        - Schemas
      title: 'Request Body: shortlink.create'
      type: object
      properties:
        callback_uri:
          type: string
          default: 'null'
          description: URI called by Settle when user scans shortlink.
        serial_number:
          type: string
          default: 'null'
          description: Serial number on printed QR codes.This field is only used when registering printed stickers issued by Settle.
      description: Register new shortlink.
    permissions.request.create:
      x-tags:
        - Schemas
      title: 'Request Body: permissions.request.create'
      type: object
      properties:
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        text:
          type: string
          description: Local transaction id for POS. This must be unique for the POS.
          default: 'null'
        callback_uri:
          type: string
          description: 'If provided, Settle will POST to this URI when the status of the permission request changes. The data transferred in the POST are the same as what can be retrieved by calling GET on the resource URI.'
          default: 'null'
        scope:
          type: string
          description: 'Space-delimited list of scopes. Any of: "openid" (static id), "profile" (name), "phone", "email", "shipping_address", "identity_documentation".'
        expires_in:
          type: string
          description: Expiration in seconds from when server received request.
          default: '21600'
          maxLength: 2592000
        failure_return_uri:
          type: string
          default: 'null'
          description: Return URL if permission is denied.
        success_return_uri:
          type: string
          default: 'null'
          description: Return URL if permission request is approved.
        legal_terms_url:
          type: string
          default: 'null'
          description: The URL for the terms and conditions provided for the permissions request.
      required:
        - legal_terms_url
        - customer
        - scope
      description: Create Permission Request.
    shortlink.update:
      x-tags:
        - Schemas
      title: 'Request Body: shortlink.update'
      type: object
      description: Update existing shortlink registration.
      properties:
        callback_uri:
          type: string
          default: 'null'
          description: URI called by Settle when user scans shortlink.
    ssp.users.create:
      x-tags:
        - Schemas
      title: 'Request Body: ssp.users.create'
      type: object
      description: 'Creates a MerchantSspUser and returns 201 CREATED (unless a user with the same email already exists, which results in a 409 CONFLICT response).'
      properties:
        email:
          type: string
          description: Email
          pattern: '^.+@[^.].*.[a-z]{2,10}$'
        phone:
          type: string
          default: 'null'
          description: Phone
        name:
          $ref: ../models/Name.yaml
      required:
        - email
    apiKeys.update:
      x-tags:
        - Schemas
      title: 'Request Body: apiKeys.update'
      type: object
      description: Update API Key
      x-examples: {}
      properties:
        label:
          type: string
          description: User given name to API Key.
        key_type:
          type: string
        roles:
          type: string
          enum:
            - user
            - superuser
            - integrator
        netmask:
          type: string
          description: 'Limit user connections by netmask, for example 192.168.1.0/24'
          format: ipv4
          example: 192.168.1.0/24
        secret:
          type: string
          minLength: 8
          maxLength: 64
          description: Secret used when authenticating with Settle.
        pubkey:
          $ref: ../models/PubKey.yaml
    apiKeys.create.201:
      x-tags:
        - Schemas
      title: 'Request Body: apiKeys.create'
      type: object
      description: Create API Key
      x-examples: {}
      properties:
        id:
          type: string
          description: User ID
        label:
          type: string
          description: User given name to API Key.
        key_type:
          type: string
          enum:
            - secret
            - rsa_generated
            - rsa_user
          description: Type of API Key to create.
        roles:
          type: string
          description: 'Role. Value in user, superuser (case insensitive).'
          enum:
            - user
            - superuser
            - integrator
          default: 'null'
        netmask:
          type: string
          description: 'Limit user connections by netmask, for example 192.168.1.0/24.'
        secret:
          type: string
          description: Secret used when authenticating with Settle.
          minLength: 8
          maxLength: 64
        pubkey:
          $ref: ../models/PubKey.yaml
      required:
        - id
        - key_type
    payment.send.create:
      title: payment.send.create
      type: object
      properties:
        payer:
          type: string
          description: The merchant ID of the sender.
        payee:
          $ref: ../models/PersonIdentifier.v1.yaml
        idempotency_id:
          type: string
          description: Unique id for each payment request.
        currency:
          $ref: ../models/Currency.v1.yaml
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        chat_text:
          type: string
          description: Message presented to the user with the payment.
        expires_in:
          type: string
          description: 'Number of seconds the funds can not be claimed immediately, how long will they be available before being returned to the sender. Default is three (3) days.'
        required_identified:
          type: boolean
          description: Option to request the recipient to have a verified identity in order to receive the funds.
          default: false
      required:
        - payer
        - payee
        - idempotency_id
        - currency
        - amount
      responses:
        payment.request.list.200:
          description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                $ref: ../models/PaymentRequestListItem.yaml
              cursor:
                $ref: ../models/Cursor.yaml
      description: '**Please note** that using the same `idempotency_id` again in a new request will only result in the retrieval of the first resulting Transaction ID (`tid`), not a new payment, making it is safe to retry payment requests in case of network loss.'
    payment.request.create.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: Transaction id
              uri:
                type: string
                default: 'null'
                format: uri
                description: 'If payment request was posted without a customer, user can claim it on this uri'
            required:
              - id
    pos.create.201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                default: 'null'
                description: Id
    pos.list.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              uris:
                type: string
                description: A list of absolute paths to the requested resources.
              next:
                type: string
                default: 'null'
                description: Path to the next list chunk.
              prev:
                type: string
                default: 'null'
                description: Path to the previous list chunk.
            required:
              - uris
    pos.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                default: 'null'
                description: ID
              name:
                type: string
                maxLength: 100
                description: 'Human-readable name of the POS, used for displaying payment request origin to end user.'
              type:
                type: string
                maxLength: 50
                description: POS type.
                enum:
                  - store
                  - webshop
                  - mobile
                  - vending
                  - poster
              location:
                $ref: ../models/Location.yaml
    payment.request.create.201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: Transaction id.
              uri:
                type: string
                format: uri
                default: 'null'
                description: 'If payment request was posted without a customer, user can claim it on this uri.'
            required:
              - id
    sales.summary.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              merchant_timezone:
                type: string
                description: Merchant Timezone
                default: 'null'
              result_timezone:
                type: string
                description: Result Timezone
                default: 'null'
              start_of_day:
                $ref: ../models/Time.yaml
              periods:
                $ref: ../models/DateTime.yaml
              data_until:
                $ref: ../models/DateTime.yaml
              products:
                $ref: ../models/SalesSummaryProduct.yaml
              max_timestamp:
                $ref: ../models/DateTime.yaml
    settlement.latest.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              uris:
                type: string
                description: A list of absolute paths to the requested resources.
                default: 'null'
              next:
                type: string
                description: Path to the next list chunk.
                default: 'null'
              prev:
                type: string
                description: Path to the previous list chunk.
                default: 'null'
            required:
              - uris
    settlement.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: The ID of the settlement.
              date_created:
                $ref: ../models/DateTime.yaml
              transaction_log_uris:
                type: string
                description: 'List of download URIs for the Transaction log blob object in CSV format.The Transaction log is divided in sizable chunks, and each URI points to its own chunk.'
                pattern: '(^|^w+://(localhost|[^/:]+.[a-z]{2,10}|([0-9]{1,3}.){3}[0-9]{1,3})(:[0-9]+)?)(/.*)?$'
              scope_log_uris:
                description: 'List of download URI`s for the Scope log blob object in CSV format. The Scope log is divided in sizable chunks, and each URI points to its own chunk.'
                pattern: '(^|^w+://(localhost|[^/:]+.[a-z]{2,10}|([0-9]{1,3}.){3}[0-9]{1,3})(:[0-9]+)?)(/.*)?$'
                type: string
              settlement_summary:
                $ref: ../models/ReportSummary.yaml
              payout_details:
                $ref: ../models/PayoutDetail.yaml
            required:
              - id
              - date_created
              - transaction_log_uris
              - scope_log_uris
    settlement.get.404:
      description: Not Found
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    settlement.account.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID
                default: 'null'
              start_of_day:
                $ref: ../models/Time.yaml
              currency:
                type: string
                description: Currency
                default: 'null'
              payout_delay:
                $ref: ../models/TimeDelta.yaml
              payout_account:
                type: string
                description: Payout Account
                default: 'null'
              frequency:
                $ref: ../models/SettlementAccountFrequency.yaml
    settlement.report.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                $ref: ../models/SettlementListItem.yaml
              summary:
                $ref: ../models/SettlementListSummary.yaml
              report_context:
                $ref: ../models/SettlementListReportContext.yaml
    shortlink.create.201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID
                default: 'null'
      headers:
        Location:
          schema:
            type: string
          description: URI to shortlink resource.
    shortlink.create.400:
      description: 'Bad request, validation error.'
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
      headers: {}
    shortlink.list.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              uris:
                type: string
                description: A list of absolute paths to the requested resources.
              next:
                type: string
                default: 'null'
                description: Path to the next list chunk.
              prev:
                type: string
                default: 'null'
                description: Path to the previous list chunk.
            required:
              - uris
    shortlink.update.200:
      description: OK
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    shortlink.update.204:
      description: No Content
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    shortlink.update.400:
      description: 'Bad request, validation error.'
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    shortlink.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                default: 'null'
                description: ID
              callback_uri:
                type: string
                default: 'null'
                description: URI called by Settle when user scans shortlink.
              serial_number:
                type: string
                default: 'null'
                description: Serial number on printed QR codes.This field is only used when registering printed stickers issued by Settle.
              shortlink_value:
                type: string
                default: 'null'
                description: Text to be displayed as QR code.
            required:
              - shortlink_value
    shortlink.delete.204:
      description: No Content
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
        application/xml:
          schema:
            type: object
            properties: {}
    ssp.users.create.201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                default: 'null'
                description: ID
              email:
                type: string
                default: 'null'
                pattern: '^.+@[^.].*.[a-z]{2,10}$'
                description: Email
              phone:
                type: string
                default: 'null'
                description: Phone
              name:
                $ref: ../models/NameResponse.yaml
              legal_entities:
                $ref: ../models/NdbKey.yaml
              bankid:
                type: string
                default: 'null'
                description: Bankid
    ssp.users.create.409:
      description: 'Conflict, user with the same email already exists'
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: string
    ssp.users.delete.204:
      description: No Content
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    ssp.users.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID
                default: 'null'
              email:
                type: string
                pattern: '^.+@[^.].*.[a-z]{2,10}$'
                description: Email
                default: 'null'
              phone:
                type: string
                description: Phone
                default: 'null'
              name:
                $ref: ../models/NameResponse.yaml
              legal_entities:
                $ref: ../models/NdbKey.yaml
              bankid:
                type: string
                description: Bankid
                default: 'null'
    statusCodes.list.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                default: 'null'
                description: Code
              name:
                type: string
                default: 'null'
                description: Name
    statusCodes.get.200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                default: 'null'
                description: Code
              name:
                type: string
                default: 'null'
                description: Name
    users.create.201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID
                default: 'null'
    users.get.201:
      description: Created
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                netmask: 192.168.1.0/24
                label: string
                secret: stringst
                pubkey:
                  id: string
            properties:
              id:
                type: string
                default: 'null'
                description: User ID.
              netmask:
                type: string
                minLength: 1
                format: ipv4
                example: 192.168.1.0/24
                default: 'null'
                description: 'Limit user connections by netmask, for example 192.168.1.0/24.'
              label:
                type: string
                minLength: 1
                default: 'null'
                description: User given name to RSA key/secret.
              has_secret:
                type: boolean
                description: Whether user has secret set.
              pubkey:
                $ref: ../models/PubKey.yaml
          examples: {}
    settlement.list.200:
      description: List settlements.
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                prev: null
                uris:
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/1/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/2/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/3/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/4/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/5/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/6/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/7/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/8/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/9/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/10/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/11/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/12/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/13/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/14/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/15/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/16/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/17/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/18/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/19/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/20/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/21/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/22/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/23/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/24/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/25/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/26/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/27/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/28/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/29/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/30/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/31/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/32/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/33/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/34/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/35/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/36/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/37/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/38/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/39/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/40/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/41/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/42/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/43/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/44/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/45/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/46/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/47/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/48/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/49/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/50/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/51/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/52/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/53/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/54/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/55/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/56/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/57/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/58/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/59/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/60/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/61/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/62/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/63/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/64/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/65/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/66/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/67/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/68/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/69/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/70/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/71/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/72/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/73/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/74/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/75/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/76/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/77/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/78/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/79/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/80/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/81/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/82/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/83/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/84/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/85/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/86/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/87/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/88/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/89/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/90/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/91/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/92/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/93/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/94/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/95/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/96/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/97/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/98/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/99/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/100/'
                next: 'https://api.sandbox.settle.eu/merchant/v1/settlement/?start=101'
            properties:
              prev:
                type: string
                default: 'null'
              uris:
                type: object
              next:
                type: string
                default: 'null'
  securitySchemes: {}
  parameters:
    merchant_id:
      name: merchant_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant id assigned by Settle.
    tid:
      name: tid
      in: path
      required: true
      schema:
        type: string
      description: Transaction ID assigned by Settle.
    pos_id:
      name: pos_id
      in: path
      required: true
      schema:
        type: string
      description: POS id as chosen on registration.
    lookup_id:
      name: lookup_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant lookup ID assigned by Settle.
    settlement_id:
      name: settlement_id
      in: path
      required: true
      schema:
        type: string
      description: The ID of the settlement to retrieve.
    settlement_account_id:
      name: settlement_account_id
      in: path
      required: true
      schema:
        type: string
    location:
      name: location
      in: header
      required: false
      schema:
        type: string
      description: URI to shortlink resource.
    shortlink_id:
      name: shortlink_id
      in: path
      required: true
      schema:
        type: string
      description: Shortlink ID assigned by Settle.
    status_code:
      name: status_code
      in: path
      required: true
      schema:
        type: string
      description: Status Code provided by Settle.
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant User ID provided by Settle.
    merchant_ssp_user_id:
      name: merchant_ssp_user_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant SSP User ID
    api_user_id:
      name: api_user_id
      in: path
      required: true
      schema:
        type: string
      description: API Key ID created by either Settle or User
    rid:
      name: rid
      in: path
      required: true
      schema:
        type: string
      description: Permission request id assigned by Settle
  examples: {}
  requestBodies:
    payment.send:
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                payer:
                  type: string
                  description: The merchant ID of the sender
                payee:
                  $ref: ../models/PersonIdentifier.v1.yaml
                idempotency_id:
                  type: string
                  description: Unique id for each payment request.
                currency:
                  $ref: ../models/Currency.v1.yaml
                amount:
                  $ref: ../models/MoneyInteger.v1.yaml
                chat_text:
                  type: string
                  description: Message presented to the user with the payment.
                expires_in:
                  type: string
                  description: 'Number of seconds the funds can not be claimed immediately, how long will they be available before being returned to the sender. Default is three (3) days.'
                required_identified:
                  type: boolean
                  default: false
                  description: Option to request the recipient to have a verified identity in order to receive the funds.
            properties:
              payer:
                type: string
                description: The merchant ID of the sender.
              payee:
                $ref: ../models/PersonIdentifier.v1.yaml
              idempotency_id:
                type: string
                description: Unique id for each payment request.
              currency:
                $ref: ../models/Currency.v1.yaml
              amount:
                $ref: ../models/MoneyInteger.v1.yaml
              chat_text:
                type: string
                description: Message presented to the user with the payment.
              expires_in:
                type: string
                description: 'Number of seconds the funds can not be claimed immediately, how long will they be available before being returned to the sender. Default is three (3) days.'
              required_identified:
                type: boolean
                description: Option to request the recipient to have a verified identity in order to receive the funds.
                default: false
            required:
              - payer
              - payee
              - idempotency_id
              - currency
              - amount
          examples: {}
      description: 'Send payment. **Please note** that using the same `idempotency_id` again in a new request will only result in the retrieval of the first resulting Transaction ID (`tid`), not a new payment, mnng it is safe to retry payment requests in case of network loss.'
    permissions.request.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer:
                $ref: ../models/PersonIdentifier.v1.yaml
              text:
                type: string
                description: Local transaction id for POS. This must be unique for the POS.
                default: 'null'
              callback_uri:
                type: string
                description: 'If provided, Settle will POST to this URI when the status of the permission request changes. The data transferred in the POST are the same as what can be retrieved by calling GET on the resource URI.'
                default: 'null'
              scope:
                type: string
                description: 'Space-delimited list of scopes. Any of: "openid" (static id), "profile" (name), "phone", "email", "shipping_address", "identity_documentation".'
              expires_in:
                type: string
                description: Expiration in seconds from when server received request.
                default: '21600'
                maxLength: 2592000
              failure_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission is denied.
              success_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission request is approved.
              legal_terms_url:
                type: string
                default: 'null'
                description: The URL for the terms and conditions provided for the permissions request.
            required:
              - legal_terms_url
              - customer
              - scope
      description: Create Permission Request
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '204':
      description: No content
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error_detail: null
                error_type: Unauthorized
                error_description: No X-Auka-Merchant header value
            properties:
              error_detail:
                type: string
              error_type:
                type: string
              error_description:
                type: string
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error_detail: null
                error_type: Unauthorized
                error_description: No X-Auka-Merchant header value
            properties:
              error_detail:
                type: string
              error_type:
                type: string
              error_description:
                type: string
    '404':
      description: Not found
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '405':
      description: Method not allowed
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    permissions.request.get.200:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                customer: 'null'
                text: 'null'
                callback_uri: 'null'
                scope: string
                legal_terms_url: string
                expires_in: '21600'
            properties:
              customer:
                $ref: ../models/PersonIdentifier.v1.yaml
              text:
                type: string
                description: Text that is shown to user when asked for permission. This can contain linebreaks and the text has to fit on smartphones screens.
                default: 'null'
              callback_uri:
                type: string
                description: 'If provided, Settle will POST to this URI when the status of the permission request changes. The data transferred in the POST are the same as what can be retrieved by calling GET on the resource URI.'
                default: 'null'
              scope:
                type: string
                description: 'Space-delimited list of scopes. Any of: "openid" (static id), "profile" (name), "phone", "email", "shipping_address", "identity_documentation".'
                default: 'null'
              expires_in:
                type: number
              failure_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission is denied.
              success_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission request is approved.
              legal_terms_url:
                type: string
                default: 'null'
                description: The URL for the terms and conditions provided for the permissions request.
            required:
              - customer
              - scope
              - legal_terms_url
              - scope
    permissions.request.outcome.get.200:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                customer: 'null'
                text: 'null'
                callback_uri: 'null'
                scope: string
                legal_terms_url: string
                expires_in: '21600'
            properties:
              access_token:
                type: string
                description: This access token can be used as a Bearer token to access /ouath2/v1/userinfo
              id_token:
                type: string
                description: A JWT that contains identity information about the user that is digitally signed
              token_type:
                type: string
                description: 'Type of access token, at this time it will always be Bearer'
              expires_in:
                type: integer
                description: Lifetime in seconds of the access token
              refresh_token:
                type: string
                description: Refresh token used to issue new access token after expiration
              scope:
                type: string
                description: Space separated string with the scopes of the permission request
              currency:
                type: string
                description: Currency for fee
              transaction_fee:
                type: integer
                description: Permission fee to be deducted from settlement
              status:
                type: string
                description: 'Status of the permission request. Can be one of the following values: pending, ok, request_expired, rejected, cancelled, revoked'
              pos_id:
                type: string
                description: The POS id provided for permission request. Unused for now
              pos_tid:
                type: string
                description: The POS tid provided for permission request. Unused for now
              rid:
                type: string
                description: Request id
              user_info:
                $ref: ../models/UserInfo.yaml
          examples:
            Example:
              value:
                customer: 'null'
                text: 'null'
                callback_uri: 'null'
                scope: 'null'
                expires_in: 21600
                failure_return_uri: 'null'
                success_return_uri: 'null'
                legal_terms_url: 'null'
    apiKeys.create.201:
      description: API Key Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID
              label:
                type: string
                description: User given name to API Key.
              key_type:
                type: string
                enum:
                  - secret
                  - rsa_generated
                  - rsa_user
                description: Type of API Key to create.
                readOnly: true
              roles:
                type: string
                description: 'Role. Value in user, superuser (case insensitive).'
                enum:
                  - user
                  - superuser
                  - integrator
              netmask:
                type: string
                description: 'Limit user connections by netmask, for example 0.0.0.0/24.'
              secret:
                type: string
                description: Secret used when authenticating with Settle.
                minLength: 8
                maxLength: 64
              pubkey:
                $ref: ../models/PubKey.yaml
            required:
              - id
              - key_type
tags:
  - name: Authentication
  - name: Info
  - name: Balance
  - name: Logo
  - name: Payments
  - name: Pos
  - name: Sales
  - name: Settlement
  - name: Shortlink
  - name: Self Service Portal
  - name: Status Codes
  - name: Users
  - name: Permission Requests
