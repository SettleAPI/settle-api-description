openapi: 3.0.0
info:
  title: Settle Merchant API
  version: '1.0'
  contact:
    name: Settle Group
    email: support+dev@settle.eu
    url: 'https://settle.eu/developer/'
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/SettleAPI/settle-api-description/main/LICENSE'
  description: |-
    # Settle Merchant API
    The Settle Merchant API enables merchants to interact with Settle, registering POS', create shortlinks for QR-scans, send payment requests, submit permission requests for end user info, and much more.

    ## Service Endpoints
    A service endpoint is a base URL that specifies the network address of an API service. One service might have multiple service endpoints.

    - **Production**: https://api.settle.eu
    - **Sandbox**: https://api.sandbox.settle.eu

    ## REST Resources
    The above services has the following resources, and all methods below are relative to its parent method (service endpoint).

    ### Authentication
    - [Create API Key](./b3A6MTUzOTU0MDk-merchant-api-keys-create)
    - [List API Keys](./b3A6MTUzOTU0MDg-merchant-api-keys-list)
    - [Get API Key](./b3A6MTUzOTU0NDQ-merchant-api-keys-get)
    - [Update API Key](./b3A6MTUzOTU0NDI-merchant-api-keys-update)
    - [Delete API Key](./b3A6MTUzOTU0NDM-merchant-api-keys-delete)

    ### Balance
    - [Get Merchant Balance](./b3A6MTUzOTU0NDE-merchant-balance-get)

    ### Payments
    - [Create Payment Request](./b3A6ODY4MjgyNA-merchant-payment-request-create)
    - [List Payment Requests](./b3A6MTUzOTU0MTE-merchant-payment-request-list)
    - [Get Payment Request](./b3A6MTUzOTU0MTQ-merchant-payment-request-get)
    - [Update Payment Request](./b3A6OTM1MjI5OA-merchant-payment-request-update)
    - [Get Payment Request Outcome](./b3A6ODY5MDgzNQ-merchant-payment-request-outcome-get)
    - [Send Payment](./b3A6MTUzOTU0Mzc-merchant-payment-send-create)
    - [Get Sent Payment Outcome](./b3A6MTUzOTU0Mzg-merchant-payment-send-outcome-get)

    ### POS Resource
    - [Create POS Resource](./b3A6MTUzOTU0MTU-merchant-pos-create)
    - [List All POS' Resources](./b3A6MTUzOTU0MTY-merchant-pos-list)
    - [Get POS Resource](./b3A6MTUzOTU0MTk-merchant-pos-get)
    - [Update POS Resource](./b3A6MTUzOTU0MTc-merchant-pos-update)
    - [Delete POS Resource](./b3A6MTUzOTU0MTg-merchant-pos-delete)

    ### ShortLinks
    - [Create ShortLink](./b3A6MTUzOTU0Mjk-merchant-shortlink-create)
    - [List All ShortLinka](./b3A6MTUzOTU0Mjg-merchant-shortlink-list)
    - [Get ShortLink](./b3A6MTUzOTU0MzA-merchant-shortlink-get)
    - [Update ShortLink](./b3A6MTUzOTU0MzE-merchant-shortlink-update)
    - [Delete ShortLink](./b3A6MTUzOTU0MzI-merchant-shortlink-delete)

    ### Status Codes
    - [List Status Codes](./b3A6MTUzOTU0MzU-merchant-status-codes-list)
    - [Get Status Code](./b3A6MTUzOTU0MzY-merchant-status-codes-get)

    ### Permissions Requests
    - [Create Permissions Request](./b3A6Mjk5NjUxNTk-merchant-permissions-request-create)
    - [Get Permissions Request](./b3A6Mjk5NjUxNjA-merchant-permissions-request-get)
    - [Get Permissions Request Outcome](./b3A6MzE5MjkxOTE-merchant-permissions-request-outcome-get)
servers:
  - url: 'https://api.sandbox.settle.eu/merchant/v1'
    description: Sandbox
  - url: 'https://api.settle.eu/merchant/v1'
    description: Production
paths:
  /api_key:
    get:
      summary: merchant.apiKeys.list
      tags:
        - Authentication
      responses:
        '200':
          $ref: '#/components/responses/apiKeys.list'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: merchant.apiKeys.list
      description: List Merchant API Keys
    post:
      summary: merchant.apiKeys.create
      operationId: merchant.apiKeys.create
      responses:
        '201':
          $ref: '#/components/responses/apiKeys.create'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Conflict
      description: Create API Key for the Merchant given in the `X-Settle-Merchant` header.
      tags:
        - Authentication
      requestBody:
        $ref: '#/components/requestBodies/apiKeys.create'
    parameters: []
  '/api_key/{api_user_id}':
    parameters:
      - $ref: '#/components/parameters/api_user_id'
    put:
      summary: merchant.apiKeys.update
      operationId: merchant.apiKeys.update
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      description: Update API Key
      tags:
        - Authentication
      requestBody:
        $ref: '#/components/requestBodies/apiKeys.update'
    delete:
      summary: merchant.apiKeys.delete
      operationId: merchant.apiKeys.delete
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
      description: Delete API Key
      tags:
        - Authentication
    get:
      summary: merchant.apiKeys.get
      operationId: merchant.apiKeys.get
      responses:
        '200':
          $ref: '#/components/responses/apiKeys.get'
        '401':
          $ref: '#/components/responses/401'
      description: Get API Key
      tags:
        - Authentication
  /payment_request:
    post:
      summary: merchant.payment.request.create
      operationId: merchant.payment.request.create
      responses:
        '200':
          $ref: '#/components/responses/payment.request.create'
        '201':
          $ref: '#/components/responses/payment.request.create'
        '400':
          description: 'Bad Request, validation error.'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Conflict; `pos_id` and/or `pos_tid` already used for a Payment Request.
      description: |-
        Create a Payment Request.

        The call is idempotent; that is, if one posts the same pos_id and pos_tid twice, only one payment request is created.
      parameters: []
      tags:
        - Payments
      requestBody:
        $ref: '#/components/requestBodies/payment.request.create'
    get:
      summary: merchant.payment.request.list
      operationId: merchant.payment.request.list
      responses:
        '200':
          $ref: '#/components/responses/payment.request.list'
        '401':
          $ref: '#/components/responses/401'
      description: List Payment Requests
      tags:
        - Payments
      parameters: []
  '/payment_request/{tid}':
    parameters:
      - $ref: '#/components/parameters/tid'
    put:
      summary: merchant.payment.request.update
      operationId: merchant.payment.request.update
      responses:
        '204':
          description: 'OK, (no content).'
        '400':
          description: 'Bad Request, illegal input.'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: 'Conflict, illegal action at this time (capture before authorization, abort after capture).'
      description: |-
        Update, reauthorize, capture, release or abort payment request.

        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, additional_amount and capture_id twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action CAPTURE without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the REFUND action will require that the API call is made with the KEY authorization mode, not SECRET.
      tags:
        - Payments
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/payment.request.update'
    get:
      summary: merchant.payment.request.get
      operationId: merchant.payment.request.get
      responses:
        '200':
          $ref: '#/components/responses/payment.request.get'
        '401':
          $ref: '#/components/responses/401'
      description: Retrieve payment request info
      tags:
        - Payments
  '/payment_request/{tid}/outcome':
    parameters:
      - $ref: '#/components/parameters/tid'
    get:
      summary: merchant.payment.request.outcome.get
      responses:
        '200':
          $ref: '#/components/responses/payment.request.outcome.get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: TID not found (or unauthorized for this merchant)
      operationId: merchant.payment.request.outcome.get
      description: |-
        Shows the outcome info for a Payment Request, ReAuth or Capture.

        This endpoints includes specified fee and/or interchange that will be deducted from payout, and also updated additional amount field if the user added gratuity.

        If the callback URI registered for the payment request was secure (https), the contents of this form was sent along with the callback. If the callback URI was insecure, a notification pointing to this endpoint was sent instead.
      tags:
        - Payments
  /payment_send:
    post:
      summary: merchant.payment.send.create
      responses:
        '201':
          $ref: '#/components/responses/payment.send.create'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    error_detail: null
                    error_type: Bad Request
                    error_description: Insufficient funds
                properties:
                  error_detail:
                    type: string
                  error_type:
                    type: string
                  error_description:
                    type: string
              examples:
                Insufficient funds:
                  value:
                    error_detail: 'null'
                    error_type: Bad Request
                    error_description: Insufficient funds
          headers: {}
        '401':
          description: Unauthorized
      description: Send payment
      operationId: merchant.payment.send.create
      tags:
        - Payments
      requestBody:
        $ref: '#/components/requestBodies/payment.send.create'
  '/payment_send/{tid}/outcome':
    parameters:
      - $ref: '#/components/parameters/tid'
    get:
      summary: merchant.payment.send.outcome.get
      responses:
        '200':
          $ref: '#/components/responses/payment.send.outcome.get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error_detail:
                    type: object
                    properties: {}
                  error_type:
                    type: string
                    minLength: 1
                  error_description:
                    type: string
                    minLength: 1
                required:
                  - error_detail
                  - error_type
                  - error_description
                x-examples:
                  example-1:
                    error_detail: {}
                    error_type: Not Found
                    error_description: no payment request with id p0gv8xc9d3km
              examples:
                No payment found:
                  value:
                    error_detail: {}
                    error_type: Not Found
                    error_description: no payment request with ID xxx
      operationId: merchant.payment.send.outcome.get
      tags:
        - Payments
      description: Get outcome of sent payment
  /pos:
    post:
      summary: merchant.pos.create
      operationId: merchant.pos.create
      responses:
        '201':
          $ref: '#/components/responses/pos.create'
        '400':
          description: 'Bad Request, validation error'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    error_detail: null
                    error_type: Conflict
                    error_description: POS with ID "5rg1dkk8|9469f42f-8acf-43a8-ac28-bb64c8a994bd" already exists
                properties:
                  error_detail: {}
                  error_type:
                    type: string
                    minLength: 1
                  error_description:
                    type: string
                    minLength: 1
              examples:
                POS exists:
                  value:
                    error_detail: null
                    error_type: Conflict
                    error_description: POS with ID "5rg1dkk8|9469f42f-8acf-43a8-ac28-bb64c8a994bd" already exists
      description: Create POS resource
      parameters: []
      tags:
        - Pos
      requestBody:
        $ref: '#/components/requestBodies/pos.create'
    get:
      summary: merchant.pos.list
      operationId: merchant.pos.list
      responses:
        '200':
          $ref: '#/components/responses/pos.list'
        '401':
          $ref: '#/components/responses/401'
      description: List all Point of Sales for merchant.
      tags:
        - Pos
  '/pos/{pos_id}':
    parameters:
      - $ref: '#/components/parameters/pos_id'
    put:
      summary: merchant.pos.update
      operationId: merchant.pos.update
      responses:
        '204':
          description: No Content
        '400':
          description: 'Bad request, validation error'
        '401':
          $ref: '#/components/responses/401'
      description: Update POS resource
      tags:
        - Pos
      requestBody:
        $ref: '#/components/requestBodies/pos.update'
    delete:
      summary: merchant.pos.delete
      operationId: merchant.pos.delete
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
      description: Delete POS
      tags:
        - Pos
    get:
      summary: merchant.pos.get
      operationId: merchant.pos.get
      responses:
        '200':
          $ref: '#/components/responses/pos.get'
        '401':
          $ref: '#/components/responses/401'
      description: Retrieve POS info.
      tags:
        - Pos
  /settlement:
    get:
      summary: merchant.settlement.list
      operationId: merchant.settlement.list
      responses:
        '200':
          $ref: '#/components/responses/settlement.list'
        '401':
          $ref: '#/components/responses/401'
      description: List Settlements
      tags:
        - Settlement
  '/settlement/{settlement_id}':
    parameters:
      - $ref: '#/components/parameters/settlement_id'
    get:
      summary: merchant.settlement.get
      tags:
        - Settlement
      responses:
        '200':
          $ref: '#/components/responses/settlement.get'
        '401':
          $ref: '#/components/responses/401'
      operationId: merchant.settlement.get
      description: 'Retrieve information regarding one settlement. The settlement contains detailed information about the amount paid out in the payout_details form. In case merchant has unsettled fees from previous settlements, Settle will attempt to settle these before paying out. If there are still unsettled fees after settlement is done, this amount will be transferred to the next settlement, or billed by Settle.'
  /last_settlement:
    get:
      summary: merchant.settlement.latest.get
      responses:
        '200':
          $ref: '#/components/responses/settlement.get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      operationId: merchant.settlement.latest.get
      description: |-
        This endpoint redirects to the latest Settlement.

        Whenever a new Settlement is generated, this reference is automatically updated.
      x-internal: false
      tags:
        - Settlement
  /shortlink:
    get:
      summary: merchant.shortlink.list
      tags:
        - Shortlink
      operationId: merchant.shortlink.list
      parameters: []
      description: List shortlink registrations.
      responses:
        '200':
          $ref: '#/components/responses/shortlink.list'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: merchant.shortlink.create
      operationId: merchant.shortlink.create
      responses:
        '201':
          $ref: '#/components/responses/shortlink.create'
        '401':
          $ref: '#/components/responses/401'
      description: Register new shortlink.
      tags:
        - Shortlink
      requestBody:
        $ref: '#/components/requestBodies/shortlink.create'
  '/shortlink/{shortlink_id}':
    parameters:
      - $ref: '#/components/parameters/shortlink_id'
    get:
      summary: merchant.shortlink.get
      tags:
        - Shortlink
      responses:
        '200':
          $ref: '#/components/responses/shortlink.get'
        '401':
          $ref: '#/components/responses/401'
      operationId: merchant.shortlink.get
      description: Retrieve registered shortlink info.
    put:
      summary: merchant.shortlink.update
      operationId: merchant.shortlink.update
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
      description: Update existing shortlink registration.
      tags:
        - Shortlink
      requestBody:
        $ref: '#/components/requestBodies/shortlink.update'
    delete:
      summary: merchant.shortlink.delete
      operationId: merchant.shortlink.delete
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
      description: Delete shortlink
      tags:
        - Shortlink
  /status_code:
    get:
      summary: merchant.statusCodes.list
      tags:
        - Status Codes
      responses:
        '200':
          $ref: '#/components/responses/statusCodes.list'
      operationId: merchant.statusCodes.list
      description: List Status Codes
  '/status_code/{status_code}':
    parameters:
      - $ref: '#/components/parameters/status_code'
    get:
      summary: merchant.statusCodes.get
      tags:
        - Status Codes
      responses:
        '200':
          $ref: '#/components/responses/statusCodes.get'
      operationId: merchant.statusCodes.get
      description: Get details about a spesific Status Code
  '/merchant/{merchant_id}/balance':
    parameters:
      - name: merchant_id
        in: path
        required: true
        schema:
          type: string
        description: Merchant id assigned by Settle.
    get:
      summary: merchant.balance.get
      tags:
        - Balance
      responses:
        '200':
          $ref: '#/components/responses/balance.get'
        '401':
          $ref: '#/components/responses/401'
      operationId: merchant.balance.get
      description: Get Merchant Account Balance
  /permission_request:
    post:
      summary: merchant.permissions.request.create
      operationId: merchant.permissions.request.create
      responses:
        '200':
          $ref: '#/components/responses/permissions.request.create'
        '201':
          $ref: '#/components/responses/permissions.request.create'
        '400':
          description: 'Bad request, validation error'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Permission request not found
      description: |-
        Create permission request.

        The call is idempotent; that is, if there is an approved permission request with the same scopes.
      tags:
        - Permission Requests
      requestBody:
        $ref: '#/components/requestBodies/permissions.request.create'
  '/permission_request/{rid}':
    parameters:
      - $ref: '#/components/parameters/rid'
    get:
      summary: merchant.permissions.request.get
      tags:
        - Permission Requests
      responses:
        '200':
          $ref: '#/components/responses/permissions.request.get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Permission request not found
      operationId: merchant.permissions.request.get
      description: See permission request info
  '/permission_request/{rid}/outcome':
    parameters:
      - $ref: '#/components/parameters/rid'
    get:
      summary: merchant.permissions.request.outcome.get
      operationId: merchant.permissions.request.outcome.get
      responses:
        '200':
          $ref: '#/components/responses/permissions.request.outcome.get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Permission request not found
      description: Get the outcome of the permission request
      tags:
        - Permission Requests
components:
  schemas: {}
  securitySchemes: {}
  parameters:
    merchant_id:
      name: merchant_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant id assigned by Settle.
    tid:
      name: tid
      in: path
      required: true
      schema:
        type: string
      description: Transaction ID assigned by Settle.
    pos_id:
      name: pos_id
      in: path
      required: true
      schema:
        type: string
      description: POS id as chosen on registration.
    lookup_id:
      name: lookup_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant lookup ID assigned by Settle.
    settlement_id:
      name: settlement_id
      in: path
      required: true
      schema:
        type: string
      description: The ID of the settlement to retrieve.
    location:
      name: location
      in: header
      required: false
      schema:
        type: string
      description: URI to shortlink resource.
    shortlink_id:
      name: shortlink_id
      in: path
      required: true
      schema:
        type: string
      description: Shortlink ID assigned by Settle.
    status_code:
      name: status_code
      in: path
      required: true
      schema:
        type: string
      description: Status Code provided by Settle.
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: string
      description: Merchant User ID provided by Settle.
    api_user_id:
      name: api_user_id
      in: path
      required: true
      schema:
        type: string
      description: API Key ID created by either Settle or Merchant
    rid:
      name: rid
      in: path
      required: true
      schema:
        type: string
      description: Permission request id assigned by Settle
  examples: {}
  requestBodies:
    permissions.request.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer:
                $ref: ../models/PersonIdentifier.v1.yaml
              text:
                type: string
                description: Local transaction id for POS. This must be unique for the POS.
                default: 'null'
              callback_uri:
                type: string
                description: 'If provided, Settle will POST to this URI when the status of the permission request changes. The data transferred in the POST are the same as what can be retrieved by calling GET on the resource URI.'
                default: 'null'
              scope:
                type: string
                description: 'Space-delimited list of scopes. Any of: "openid" (static id), "profile" (name), "phone", "email", "shipping_address", "identity_documentation".'
              expires_in:
                type: string
                description: Expiration in seconds from when server received request.
                default: '21600'
                maxLength: 2592000
              failure_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission is denied.
              success_return_uri:
                type: string
                default: 'null'
                description: Return URL if permission request is approved.
              legal_terms_url:
                type: string
                default: 'null'
                description: The URL for the terms and conditions provided for the permissions request.
            required:
              - legal_terms_url
              - customer
              - scope
      description: ''
    apiKeys.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID
              label:
                type: string
                description: User given name to API Key.
              key_type:
                type: string
                enum:
                  - secret
                  - rsa_generated
                  - rsa_user
                description: Type of API Key to create.
              roles:
                type: string
                description: 'Role. Value in user, superuser (case insensitive).'
                enum:
                  - 'null'
                  - user
                  - superuser
                  - integrator
                default: 'null'
              netmask:
                type: string
                description: 'Limit user connections by netmask, for example 192.168.1.0/24.'
              secret:
                type: string
                description: Secret used when authenticating with Settle.
                minLength: 8
                maxLength: 64
              pubkey:
                $ref: ../models/PubKey.yaml
            required:
              - id
              - key_type
    apiKeys.update:
      content:
        application/json:
          schema:
            type: object
            properties:
              label:
                type: string
                description: User given name to API Key.
              key_type:
                type: string
                enum:
                  - secret
                  - rsa_generated
                  - rsa_user
                description: Type of API Key to create.
              roles:
                type: string
                description: 'Role. Value in user, superuser (case insensitive).'
                enum:
                  - 'null'
                  - user
                  - superuser
                  - integrator
                default: 'null'
              netmask:
                type: string
                description: 'Limit user connections by netmask, for example 192.168.1.0/24.'
              secret:
                type: string
                description: Secret used when authenticating with Settle.
                minLength: 8
                maxLength: 64
              pubkey:
                $ref: ../models/PubKey.yaml
            required:
              - key_type
    payment.request.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                type: string
                description: 'Action to perform, the main difference is what it looks like in App UI.'
                enum:
                  - SALE
                  - AUTH
                  - sale
                  - auth
              additional_amount:
                $ref: ../models/MoneyInteger.v1.yaml
              additional_edit:
                type: boolean
                default: false
                description: Whether user is allowed to additional amount for gratuity or similar.
              allow_credit:
                type: boolean
                description: Whether to allow credit payment for this payment request. Credit incurs interchange.
              amount:
                $ref: ../models/MoneyInteger.v1.yaml
              cid:
                type: string
                description: Customer ID to be used for KID payments.
              currency:
                $ref: ../models/Currency.v1.yaml
              customer:
                $ref: ../models/PersonIdentifier.v1.yaml
              display_message_uri:
                type: string
                description: Messages that can be used to inform the POS operator about the progress of the payment request will be posted to this URI if provided.
              expires_in:
                type: integer
                default: 21600
                minimum: 0
                maximum: 2592000
              line_items:
                $ref: ../models/LineItem.v1.yaml
              links:
                $ref: ../models/PaymentRequestLink.v1.yaml
              pos_id:
                type: string
                description: 'The POS this payment request originates from, used for informing user about origin.'
                maxLength: 64
                pattern: '^[a-zA-Z0-9_.-]+$'
              pos_tid:
                type: string
                description: Local transaction id for POS. This must be unique for the POS.
                pattern: '^[a-zA-Z0-9_.-]+$'
                maxLength: 64
              required_scope:
                $ref: ../models/Scope.v1.yaml
              required_scope_text:
                type: string
                description: Text that is shown to user when asked for permission. This can contain line breaks and the text has to fit on smartphones screens.
                maxLength: 150
              callback_uri:
                type: string
                pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
                description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the object part of the message is the same as what can be retrieved by calling `GET` on the **/payment_request/{tid}/outcome/** resource URI.'
              success_return_uri:
                type: string
                pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
                description: Return URL if payment successful.
              failure_return_uri:
                type: string
                pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
                description: Return URL if payment failed.
              text:
                type: string
                description: Text that is shown to user when asked to pay. This can contain line breaks and the text has to fit on smartphones screens.
              uri:
                type: string
                description: 'If payment request was posted without a customer, user can claim it on this URI.'
              scope:
                $ref: ../models/Scope.v1.yaml
            required:
              - action
              - allow_credit
              - amount
              - currency
              - customer
              - pos_id
              - pos_tid
          examples:
            Example:
              value:
                action: SALE
                allow_credit: true
                amount: 0
                callback_uri: string
                currency: string
                customer: 'null'
                failure_return_uri: string
                pos_id: string
                pos_tid: string
                required_scope_text: string
                success_return_uri: string
      description: 'A payment request goes through several stages. After being registered, the customer can either reject or authorize. An authorization is valid for 3 days, but can be reauthorized before it expires to be valid for 3 new days. Once authorized, it can be captured to be included in the next settlement.'
    payment.request.update:
      content:
        application/json:
          schema:
            type: object
            properties:
              display_message_uri:
                type: string
                description: Messages that can be used to inform the POS operator about the progress of the payment request will be POSTed to this URI if provided.
              callback_uri:
                type: string
                description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the "object" part of the message is the same as what can be retrieved by calling GET on the "/payment_request/{tid}/outcome/" resource URI.'
              line_items:
                $ref: ../models/LineItem.v1.yaml
              action:
                type: string
                enum:
                  - reauth
                  - capture
                  - abort
                  - release
                  - refund
                description: Action to perform.
              amount:
                $ref: ../models/MoneyInteger.v1.yaml
              additional_amount:
                $ref: ../models/MoneyInteger.v1.yaml
              capture_id:
                type: string
                pattern: '^[a-zA-Z0-9_.-]+$'
                description: 'Local id for capture. Must be set if amount is set, otherwise capture_id must be unset. Ignored unless action is capture. Required if amount, additional_amount, currency are set.'
              refund_id:
                type: string
                description: 'Local id for refund. Must be set if amount is set, otherwise capture_id must be unset.Ignored unless action is refund.Required if amount, additional_amount, currency are set.'
                pattern: '^[a-zA-Z0-9_.-]+$'
              currency:
                $ref: ../models/Currency.v1.yaml
              text:
                type: string
                description: Text that is shown to user upon a refund. This can contain linebreaks and the text has to fit on smartphones screens.
            required:
              - currency
      description: |-
        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, `additional_amount` and `capture_id` twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action `CAPTURE` without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the `REFUND` action will require that the API call is made with the KEY authorization mode, not SECRET.
    payment.send.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              payer:
                type: string
                description: The merchant ID of the sender.
              payee:
                $ref: ../models/PersonIdentifier.v1.yaml
              idempotency_id:
                type: string
                description: Unique id for each payment request.
              currency:
                $ref: ../models/Currency.v1.yaml
              amount:
                $ref: ../models/MoneyInteger.v1.yaml
              chat_text:
                type: string
                description: Message presented to the user with the payment.
              expires_in:
                type: string
                description: 'Number of seconds the funds can not be claimed immediately, how long will they be available before being returned to the sender. Default is three (3) days.'
              required_identified:
                type: boolean
                description: Option to request the recipient to have a verified identity in order to receive the funds.
                default: false
            required:
              - payer
              - payee
              - idempotency_id
              - currency
              - amount
      description: '**Please note** that using the same `idempotency_id` again in a new request will only result in the retrieval of the first resulting Transaction ID (`tid`), not a new payment, making it is safe to retry payment requests in case of network loss.'
    pos.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: The ID of the POS that is to be created. Has to be unique for the merchant.
                maxLength: 100
              type:
                type: string
                description: POS type.
                enum:
                  - store
                  - webshop
                  - mobile
                  - vending
                  - poster
              name:
                type: string
                description: 'Human-readable name of the POS, used for displaying payment request origin to end user.'
                maxLength: 100
              location:
                $ref: ../models/Location.yaml
            required:
              - id
              - type
              - name
    pos.update:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: 'Human-readable name of the POS, used for displaying payment request origin to end user.'
                maxLength: 100
              type:
                type: string
                description: POS type.
                enum:
                  - store
                  - webshop
                  - mobile
                  - vending
                  - poster
              location:
                $ref: ../models/Location.yaml
            required:
              - name
              - type
      description: ''
    shortlink.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              callback_uri:
                type: string
                description: URI called by Settle when user scans shortlink.
              serial_number:
                type: string
                description: Serial number on printed QR codes.This field is only used when registering printed stickers issued by Settle.
                deprecated: true
      description: ''
    shortlink.update:
      content:
        application/json:
          schema:
            type: object
            properties:
              callback_uri:
                type: string
                default: 'null'
                description: URI called by Settle when user scans shortlink.
      description: ''
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '204':
      description: No content
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error_detail: null
                error_type: Unauthorized
                error_description: No X-Auka-Merchant header value
            properties:
              error_detail:
                type: string
              error_type:
                type: string
              error_description:
                type: string
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error_detail:
                  string_to_sign: 'POST|https://api.sandbox.settle.eu/merchant/v1/payment_request/|X-SETTLE-CONTENT-DIGEST=SHA256=g7gYfhu9W9wh/pKEA5EPBm2PNbz8V7gD+L5TVSHXFJo=&X-SETTLE-MERCHANT=5rg1dkk8&X-SETTLE-TIMESTAMP=2022-01-12 11:36:06&X-SETTLE-USER=6zzkbmyg'
                error_type: Unauthorized
                error_description: Invalid signature
            properties:
              error_detail:
                type: object
                properties:
                  string_to_sign:
                    type: string
                    minLength: 1
              error_type:
                type: string
                minLength: 1
              error_description:
                type: string
                minLength: 1
    '404':
      description: Not found
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '405':
      description: Method not allowed
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    permissions.request.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                customer: '4798052301'
                pos_id: null
                legal_terms_url: 'https://legal-terms.com/'
                text: ' for pos_tid '
                date_expires: '2022-01-10 15:10:29'
                failure_return_uri: null
                optional_scope: '[]'
                scope: '[u''openid'', u''phone'']'
                pos_tid: null
                callback_uri: null
                success_return_uri: null
            properties:
              customer:
                type: string
                minLength: 1
              pos_id:
                type: string
              legal_terms_url:
                type: string
                minLength: 1
              text:
                type: string
                minLength: 1
              date_expires:
                type: string
                minLength: 1
              failure_return_uri:
                type: string
              optional_scope:
                type: string
                minLength: 1
              scope:
                type: string
                minLength: 1
              pos_tid:
                type: string
              callback_uri:
                type: string
              success_return_uri:
                type: string
    permissions.request.outcome.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                status: pending
                pos_id: null
                user_info: null
                access_token: null
                id_token: null
                expires_in: null
                token_type: Bearer
                currency: null
                transaction_fee: 0
                scope: null
                rid: cb6c6q8n4feomc0lzvysk974mswh9vdw
                pos_tid: null
                refresh_token: null
            properties:
              status:
                type: string
                minLength: 1
              pos_id:
                type: string
              user_info:
                type: string
              access_token:
                type: string
              id_token:
                type: string
              expires_in:
                type: string
              token_type:
                type: string
                minLength: 1
              currency:
                type: string
              transaction_fee:
                type: number
              scope:
                type: string
              rid:
                type: string
                minLength: 1
              pos_tid:
                type: string
              refresh_token:
                type: string
          examples:
            Example:
              value:
                customer: 'null'
                text: 'null'
                callback_uri: 'null'
                scope: 'null'
                expires_in: '21600'
                failure_return_uri: 'null'
                success_return_uri: 'null'
                legal_terms_url: 'null'
    apiKeys.create:
      description: API Key Created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID
              label:
                type: string
                description: User given name to API Key.
              key_type:
                type: string
                enum:
                  - secret
                  - rsa_generated
                  - rsa_user
                description: Type of API Key to create.
                readOnly: true
              roles:
                type: string
                description: 'Role. Value in user, superuser (case insensitive).'
                enum:
                  - user
                  - superuser
                  - integrator
              netmask:
                type: string
                description: 'Limit user connections by netmask, for example 0.0.0.0/24.'
              secret:
                type: string
                description: Secret used when authenticating with Settle.
                minLength: 8
                maxLength: 64
              pubkey:
                $ref: ../models/PubKey.yaml
    apiKeys.list:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                items:
                  - has_secret: true
                    label: Explo 01
                    key_type: rsa_user
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAIbNMX0v1hlsBnTPdyMBwzi4IPksc2yK5Ctv+qNtK5pQX+8W1b4oxBzy86GfAPG9
                      hAUiSgnoahat2i9L1z7ey7+rhDuMbViiiJvCocXyiNyvOTts2XkwLGbO0mD3/Lp8MudcpmHp
                      JbzM5GrfZMnYk/dvtmxnWQDRMPvBH/l1dlMzAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: 1408wick2806211406
                  - has_secret: true
                    label: Explo 02
                    key_type: rsa_user
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAIbNMX0v1hlsBnTPdyMBwzi4IPksc2yK5Ctv+qNtK5pQX+8W1b4oxBzy86GfAPG9
                      hAUiSgnoahat2i9L1z7ey7+rhDuMbViiiJvCocXyiNyvOTts2XkwLGbO0mD3/Lp8MudcpmHp
                      JbzM5GrfZMnYk/dvtmxnWQDRMPvBH/l1dlMzAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: 1408wick2806211411
                  - has_secret: false
                    label: Settle Send
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAIbNMX0v1hlsBnTPdyMBwzi4IPksc2yK5Ctv+qNtK5pQX+8W1b4oxBzy86GfAPG9
                      hAUiSgnoahat2i9L1z7ey7+rhDuMbViiiJvCocXyiNyvOTts2XkwLGbO0mD3/Lp8MudcpmHp
                      JbzM5GrfZMnYk/dvtmxnWQDRMPvBH/l1dlMzAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: 3cjbz91k
                  - has_secret: true
                    label: Postman Secret
                    key_type: secret
                    netmask: ''
                    pubkey: ''
                    id: 4tqhfxr4
                  - has_secret: false
                    label: M2P
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAJTUc+ACSE9y8r9CRdHxS6EVS4Flyy+DrInsy2/AlakC/hHeYGHx0fkoEGqi3zWc
                      8dfwZKWaA1BZaTdYJdk7Iyf4w0NYJ4reVYU84Z04hqDujnhX+RG0km15/nE0aNeZg3b18h+n
                      q/4KbIMf91kDziuBpYyyd9/yXyhXeQa/O9QFAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: akp1pptd
                  - has_secret: true
                    label: null
                    key_type: secret
                    netmask: ''
                    pubkey: ''
                    id: cw1408wick
                  - has_secret: false
                    label: Hooray
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAIY3WCbj1qgTt7anB55510mwsEQk6DrmYKFaXMoXoGsoD+8LuGlZhuPD8iOkKpNf
                      /bQx8vpKxbg+QvpuhArS3EDSMAnNeDJOl7ZTZ0S6YRC0BtL/44lPnkio19XoIHB9Ij5uIrj1
                      v06QRyFeI6hIYJ14O08hvIvPsdfsgBcOaovfAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: p10ncdy7
                  - has_secret: false
                    label: asdfasdf
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAKmaBR3vXQpvMpqZdRB9TfWfi457wwtzUSZn1J6TMRtkS6QwuGMujqa5qArZkGlE
                      Csd8YZKMsKaY2zvSwOtj98Jn+7G1V9C534SGxlpjWWbPn9OIVrKWaM5oHLncDUxUhlDGNsoq
                      UR5HSTpzn37PZL11yODLdZNiq/sf2OFi6F0bAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: qqbxweky
                  - has_secret: false
                    label: Postman RSA
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBANRZod+hTA4roH28wfslT4Ds21aPn6OWfbPq7amng+zMB9zAk97/EpV548AmF1jN
                      kKmY3dsnyGeVqR9ARrj1Hto7NqGude7ldoTSoNmbrgwKjpXpt19tHdruhiri9gO+fOlWo1kP
                      7WxVoUuwGgU0OHAOq9iiLrNtT4oDiDUHbjCjAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: rye4391d
                  - has_secret: false
                    label: 'My Awesome RSA Key #99'
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: ''
                    id: test_2507210932
                  - has_secret: false
                    label: 'My Awesome RSA Key #100'
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: ''
                    id: test_2507210934
                  - has_secret: false
                    label: 'My Awesome RSA Key #101'
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: ''
                    id: test_2507210935
                  - has_secret: true
                    label: Node.js
                    key_type: secret
                    netmask: ''
                    pubkey: ''
                    id: wy96k5bh
                  - has_secret: true
                    label: Readme.io
                    key_type: secret
                    netmask: ''
                    pubkey: ''
                    id: xjm0eqtn
                  - has_secret: false
                    label: delete me
                    key_type: rsa_generated
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGJAoGBAKe8yRPNix5iN/KIMn+Qxmu7ymPRRW7GdmE/rIiJiUGYtIs8MXP+6KI3/JtTcfVH
                      OPNiGzyyvE96Ge6zweESfJokslUhyJGSQkodShMGvpaOAl8W4r6tYbMs8urduj9CBKeDSdm6
                      MBpnGnixsh3vrp1c4xCIIZD2j0rGD9+uDNshAgMBAAE=
                      -----END PUBLIC KEY-----
                    id: ywnrxcmp
                  - has_secret: false
                    label: Postman RSA (scripts)
                    key_type: rsa_user
                    netmask: ''
                    pubkey: |-
                      -----BEGIN PUBLIC KEY-----
                      MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCPR5Hzv2KGwsDWDVZJtGOCU3HZ
                      1k3OO4CwMu6cNl4MQVReeYuZKcFmxwVurQyO+mjAFUrwcpA7qhPDSlFwRbg/H/C6
                      2U77GQL+tRot3oY952R9l5hXG/6rscs2ntKJhqigJ0/QAfLl4G7I6xhQ9TFZ/+Vt
                      rSCjEt15qV1CfqWtpwIDAQAB
                      -----END PUBLIC KEY-----
                    id: zdc17354
            properties:
              items:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    has_secret:
                      type: boolean
                    label:
                      type: string
                      minLength: 1
                    key_type:
                      type: string
                      minLength: 1
                    netmask:
                      type: string
                    pubkey:
                      type: string
                      minLength: 1
                    id:
                      type: string
                      minLength: 1
    apiKeys.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                has_secret: true
                label: Explo 01
                key_type: rsa_user
                netmask: ''
                pubkey: |-
                  -----BEGIN PUBLIC KEY-----
                  MIGJAoGBAIbNMX0v1hlsBnTPdyMBwzi4IPksc2yK5Ctv+qNtK5pQX+8W1b4oxBzy86GfAPG9
                  hAUiSgnoahat2i9L1z7ey7+rhDuMbViiiJvCocXyiNyvOTts2XkwLGbO0mD3/Lp8MudcpmHp
                  JbzM5GrfZMnYk/dvtmxnWQDRMPvBH/l1dlMzAgMBAAE=
                  -----END PUBLIC KEY-----
                id: 1408wick2806211406
            properties:
              has_secret:
                type: boolean
              label:
                type: string
                minLength: 1
              key_type:
                type: string
                minLength: 1
              netmask:
                type: string
              pubkey:
                type: string
                minLength: 1
              id:
                type: string
                minLength: 1
    balance.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                currency: NOK
                amount: 99998000
            properties:
              currency:
                type: string
                minLength: 1
              amount:
                type: number
    payment.request.create:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                id: pmqmzfv1adsr
                uri: null
            properties:
              id:
                type: string
                minLength: 1
              uri:
                nullable: true
    payment.send.create:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    pos.create:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                id: loremIpsu
            properties:
              id:
                type: string
                minLength: 1
    shortlink.create:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                id: h3lBe
            properties:
              id:
                type: string
                minLength: 1
    payment.request.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                customer: null
                line_items: []
                success_return_uri: null
                date_expires: '2022-01-10 14:24:57'
                additional_edit: false
                text: null
                failure_return_uri: null
                required_scope: ''
                uri: null
                currency: NOK
                amount: 10000
                display_message_uri: null
                max_scan_age: 60
                allow_credit: true
                pos_id: '123456789'
                pos_tid: '987654321'
                id: pmqmzfv1adsr
                callback_uri: null
                additional_amount: 0
            properties:
              customer: {}
              line_items:
                type: array
                items:
                  type: object
              success_return_uri: {}
              date_expires:
                type: string
                minLength: 1
              additional_edit:
                type: boolean
              text: {}
              failure_return_uri: {}
              required_scope:
                type: string
              uri: {}
              currency:
                type: string
                minLength: 1
              amount:
                type: number
              display_message_uri: {}
              max_scan_age:
                type: number
              allow_credit:
                type: boolean
              pos_id:
                type: string
                minLength: 1
              pos_tid:
                type: string
                minLength: 1
              id:
                type: string
                minLength: 1
              callback_uri: {}
              additional_amount:
                type: number
    payment.request.outcome.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                status: pending
                customer: null
                refunds: []
                auth_amount: 0
                auth_additional_amount: 0
                credit: false
                captures: []
                pos_id: '123456789'
                date_modified: '2022-01-10 08:24:57'
                date_expires: '2022-01-10 14:24:57'
                currency: NOK
                amount: 10000
                interchange_fee: 0
                status_code: 1003
                tid: pmqmzfv1adsr
                attachment_uri: 'https://api.sandbox.settle.eu/_ah/upload/AMmfu6aJmdsTrs3QS2Y2sPh-nEX3HpG2nNCfOAHMwwpp5Blxqi68f0NVy93YxWtDAd7bS2HjF5jlpHR5xkqQsbSE7N224xCVdNT-mVuuzD9XgpAugK3poLZ0QZdVhpoI6KEzea5uG7Aa27wkgL1-15LyNIr3UGFFQH6MkuhdbirvYXFRwQWgoNhEuEnjIDch2iso31q8dT7oQaGsSJCb0IBAUeWv9YsP6NmaWAEFR7xUdsTX7nT7u2WCTDtFH_zRHWtZRRY_yMHJRlTb-hZSsGiK5idWCYWOQw94-QzBlAdsXrNrQfADmfEtEQpi4kZ8V9285MJRQoqVBgxL3wyZaO-C91B5gxDpnK9z16VntWseOI9HOUqvCSE/ALBNUaYAAAAAYdvyINhYhp1MWSAiLlX3MfjCpEaibCYg/'
                pos_tid: '987654321'
                permissions: null
                transaction_fee: 0
                additional_amount: 0
            properties:
              status:
                type: string
                minLength: 1
              customer:
                type: string
              refunds:
                type: array
                items:
                  type: object
              auth_amount:
                type: number
              auth_additional_amount:
                type: number
              credit:
                type: boolean
              captures:
                type: array
                items:
                  type: object
              pos_id:
                type: string
                minLength: 1
              date_modified:
                type: string
                minLength: 1
              date_expires:
                type: string
                minLength: 1
              currency:
                type: string
                minLength: 1
              amount:
                type: number
              interchange_fee:
                type: number
              status_code:
                type: number
              tid:
                type: string
                minLength: 1
              attachment_uri:
                type: string
                minLength: 1
              pos_tid:
                type: string
                minLength: 1
              permissions:
                type: string
              transaction_fee:
                type: number
              additional_amount:
                type: number
    payment.request.list:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                cursor:
                  next_cursor: Cm8KJAoXbGFzdF9ub3RhYmxlX2V2ZW50X3RpbWUSCQj63JCw1MTzAhJDahJofnNldHRsZS1jb3JlLWRlbW9yLQsSDFBheW1lbnRTaGFyZCICNjUMCxIHUGF5bWVudCIMcDZneWV6ZWYydmoxDBgAIAE=
                  prev_cursor: null
                items:
                  - phone_number: null
                    total_requested: 10000
                    status_code: 1003
                    total_captured: 0
                    currency: NOK
                    message: ''
                    total: 10000
                    expected_payout_date: null
                    category: PENDING
                    fee: 0
                    tid: pmqmzfv1adsr
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: pending
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pmqmzfv1adsr/
                    phone_number_last_four_digits: null
                    refunds: []
                    created: '2022-01-10 08:24:57'
                    modified: '2022-01-10 08:24:57'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p25x6egzrprh
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p25x6egzrprh/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 22:07:32'
                    modified: '2021-10-15 00:36:38'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 3008
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: PENDING
                    fee: 0
                    tid: ppw18135e3f7
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: auth
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/ppw18135e3f7/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:48:01'
                    modified: '2021-10-14 21:48:24'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p34wq7dre95j
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p34wq7dre95j/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:44:09'
                    modified: '2021-10-14 21:44:26'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p9hg30xmg2fr
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p9hg30xmg2fr/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:42:26'
                    modified: '2021-10-14 21:42:38'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p0t5f33desae
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p0t5f33desae/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:33:09'
                    modified: '2021-10-14 21:33:25'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pphn4xrz33f7
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pphn4xrz33f7/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:27:36'
                    modified: '2021-10-14 21:27:54'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pzme29qawkwp
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pzme29qawkwp/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:26:33'
                    modified: '2021-10-14 21:26:44'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pf9qwbgk1q25
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pf9qwbgk1q25/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:24:08'
                    modified: '2021-10-14 21:24:20'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pvwwaak304ph
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pvwwaak304ph/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-14 21:21:04'
                    modified: '2021-10-14 21:21:45'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pb3mn43dcyb5
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pb3mn43dcyb5/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-13 09:38:17'
                    modified: '2021-10-13 09:38:33'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pgrjkcbce5w3
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pgrjkcbce5w3/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-13 09:35:23'
                    modified: '2021-10-13 09:37:34'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p545e1szz4bs
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p545e1szz4bs/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 12:08:24'
                    modified: '2021-10-12 12:08:40'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pw7de5mwd01y
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pw7de5mwd01y/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 12:03:45'
                    modified: '2021-10-12 12:04:06'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: pf69dpb14at0
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/pf69dpb14at0/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 12:01:29'
                    modified: '2021-10-12 12:01:42'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: phrnqca9m0er
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/phrnqca9m0er/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 11:44:33'
                    modified: '2021-10-12 11:45:11'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: ph82xsdts6fk
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/ph82xsdts6fk/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 11:42:29'
                    modified: '2021-10-12 11:43:40'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p5wj5pj68c2c
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p5wj5pj68c2c/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 11:28:27'
                    modified: '2021-10-12 11:29:50'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p0ehepvecfr3
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p0ehepvecfr3/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 10:40:33'
                    modified: '2021-10-12 10:41:15'
                    situation: p2m
                    net_amount: 0
                  - phone_number: null
                    total_requested: 100000
                    status_code: 5006
                    total_captured: 0
                    currency: NOK
                    message: Bananas
                    total: 100000
                    expected_payout_date: null
                    category: REJECTED
                    fee: 0
                    tid: p6gyezef2vj1
                    order_status: PENDING
                    acceptance_type: settle_api
                    status: fail
                    order_id: null
                    total_refund: 0
                    is_refund: false
                    link: /merchant/v1/payment_request/p6gyezef2vj1/
                    phone_number_last_four_digits: '2301'
                    refunds: []
                    created: '2021-10-12 10:25:44'
                    modified: '2021-10-12 10:26:07'
                    situation: p2m
                    net_amount: 0
            properties:
              cursor:
                type: object
                properties:
                  next_cursor:
                    type: string
                    minLength: 1
                  prev_cursor: {}
              items:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    phone_number: {}
                    total_requested:
                      type: number
                    status_code:
                      type: number
                    total_captured:
                      type: number
                    currency:
                      type: string
                      minLength: 1
                    message:
                      type: string
                    total:
                      type: number
                    expected_payout_date: {}
                    category:
                      type: string
                      minLength: 1
                    fee:
                      type: number
                    tid:
                      type: string
                      minLength: 1
                    order_status:
                      type: string
                      minLength: 1
                    acceptance_type:
                      type: string
                      minLength: 1
                    status:
                      type: string
                      minLength: 1
                    order_id: {}
                    total_refund:
                      type: number
                    is_refund:
                      type: boolean
                    link:
                      type: string
                      minLength: 1
                    phone_number_last_four_digits: {}
                    refunds:
                      type: array
                      items:
                        type: object
                    created:
                      type: string
                      minLength: 1
                    modified:
                      type: string
                      minLength: 1
                    situation:
                      type: string
                      minLength: 1
                    net_amount:
                      type: number
    payment.send.outcome.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                object:
                  idempotency_id: fghghd5465fgdhdf6g5h4
                  payer: 5rg1dkk8
                  currency: NOK
                  timestamp: '2022-01-10 08:43:00'
                  require_identified: true
                  id: p2cb32b8efc0
                  payee: 'msisdn:4798052301'
                  amount: 10000
                  payer_status: pending
                  chat_text: ''
                type: payment
            properties:
              object:
                type: object
                properties:
                  idempotency_id:
                    type: string
                    minLength: 1
                  payer:
                    type: string
                    minLength: 1
                  currency:
                    type: string
                    minLength: 1
                  timestamp:
                    type: string
                    minLength: 1
                  require_identified:
                    type: boolean
                  id:
                    type: string
                    minLength: 1
                  payee:
                    type: string
                    minLength: 1
                  amount:
                    type: number
                  payer_status:
                    type: string
                    minLength: 1
                  chat_text:
                    type: string
              type:
                type: string
                minLength: 1
    shortlink.list:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                prev: null
                uris:
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/-NejK/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/EyHdU/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/h3lBe/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/lLFfN/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/ouO0A/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/shortlink/xhTGU/'
                next: null
            properties:
              prev:
                type: string
                nullable: true
              uris:
                type: array
                items:
                  type: object
              next:
                type: string
                nullable: true
    shortlink.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                is_active: true
                label: null
                shortlink_value: 'http://settle.eu/s/xhTGU/'
                serial_number: null
                id: xhTGU
                callback_uri: null
            properties:
              is_active:
                type: boolean
              label:
                type: string
              shortlink_value:
                type: string
                minLength: 1
              serial_number:
                type: string
              id:
                type: string
                minLength: 1
              callback_uri:
                type: string
    statusCodes.list:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            description: ''
            minItems: 1
            uniqueItems: true
            x-examples:
              example-1:
                - code: 413
                  name: REQUEST_ENTITY_TOO_LARGE
                - code: 1000
                  name: CONTINUE
                - code: 1001
                  name: SWITCHING_PROTOCOLS
                - code: 1002
                  name: REQUESTING
                - code: 1003
                  name: PENDING
                - code: 1004
                  name: FUNDING
                - code: 1005
                  name: REQUEST_RECEIVED
                - code: 1006
                  name: PAYMENT_PENDING
                - code: 2000
                  name: OK
                - code: 2001
                  name: CREATED
                - code: 2002
                  name: ACCEPTED
                - code: 2003
                  name: NON_AUTHORITATIVE_INFORMATION
                - code: 2004
                  name: NO_CONTENT
                - code: 2005
                  name: RESET_CONTENT
                - code: 2006
                  name: PARTIAL_CONTENT
                - code: 2201
                  name: PRETEND_OK
                - code: 2300
                  name: OK_PRESENT_ON_BANK_STATEMENT
                - code: 2400
                  name: REFUND
                - code: 2401
                  name: PARTIAL_REFUND
                - code: 3000
                  name: MULTIPLE_CHOICES
                - code: 3001
                  name: MOVED_PERMANENTLY
                - code: 3002
                  name: FOUND
                - code: 3003
                  name: SEE_OTHER
                - code: 3004
                  name: NOT_MODIFIED
                - code: 3005
                  name: USER_PROXY
                - code: 3007
                  name: TEMPORARY_REDIRECT
                - code: 3008
                  name: AUTH
                - code: 4000
                  name: BAD_REQUEST
                - code: 4001
                  name: UNAUTHORIZED
                - code: 4002
                  name: PAYMENT_REQUIRED
                - code: 4004
                  name: NOT_FOUND
                - code: 4005
                  name: METHOD_NOT_ALLOWED
                - code: 4006
                  name: NOT_ACCEPTABLE
                - code: 4007
                  name: PROXY_AUTHENTICATION_REQUIRED
                - code: 4008
                  name: REQUEST_TIMEOUT
                - code: 4009
                  name: CONFLICT
                - code: 4010
                  name: GONE
                - code: 4011
                  name: LENGTH_REQUIRED
                - code: 4012
                  name: PRECONDITION_FAILED
                - code: 4014
                  name: REQUEST_URI_TOO_LONG
                - code: 4015
                  name: UNSUPPORTED_MEDIA_TYPE
                - code: 4016
                  name: REQUESTED_RANGE_NOT_SATISFIABLE
                - code: 4017
                  name: EXPECTATION_FAILED
                - code: 4018
                  name: FAIL
                - code: 4019
                  name: ABORTED
                - code: 5000
                  name: INTERNAL_SERVER_ERROR
                - code: 5001
                  name: NOT_IMPLEMENTED
                - code: 5002
                  name: BAD_GATEWAY
                - code: 5003
                  name: SERVICE_UNAVAILABLE
                - code: 5004
                  name: GATEWAY_TIMEOUT
                - code: 5005
                  name: HTTP_VERSION_NOT_SUPPORTED
                - code: 5006
                  name: REJECTED
                - code: 5007
                  name: INSUFFICIENT_FUNDS
                - code: 5008
                  name: AMOUNT_LIMIT_EXCEEDED
                - code: 5009
                  name: PERIODIC_AMOUNT_LIMIT_EXCEEDED
                - code: 5010
                  name: LOGICAL_DUPLICATE
                - code: 5011
                  name: REQUEST_EXPIRED
                - code: 5012
                  name: AUTH_EXPIRED
                - code: 5020
                  name: ACCOUNT_CLOSED_FOR_DEPOSIT
                - code: 5021
                  name: INVALID_CREDIT_ACCOUNT
                - code: 5022
                  name: MISSING_CID
                - code: 5023
                  name: CREDIT_ACCOUNT_REQUIRES_CID
                - code: 5101
                  name: DAILY_LIMIT_EXCEEDED
                - code: 5102
                  name: ACCOUNT_DEACTIVATED
                - code: 5200
                  name: MANUAL_RESOLUTION_DUE_TO_BUG
                - code: 5210
                  name: BUG_MCASH_OK_BUT_MW_PENDING
                - code: 5211
                  name: REFUND_NEEDS_MANUAL_RESOLUTION
                - code: 5212
                  name: TRANSFER_NEEDS_MANUAL_RESOLUTION
                - code: 5213
                  name: MISSING_TRANSACTION_ID
                - code: 5214
                  name: PENDING_IN_TRANSACTION_LOG
                - code: 5215
                  name: MISSING_TRANSACTION_IN_SETTLEMENT_LOG
                - code: 5216
                  name: TRANSACTION_MISMATCH
                - code: 5217
                  name: MAX_DEVIATION_REACHED
                - code: 5300
                  name: EVRY_BASE
                - code: 5400
                  name: DIBS_D2_ERROR_BASE
                - code: 5901
                  name: INSUFFICIENT_MCASH_BALANCE
            items:
              type: object
              properties:
                code:
                  type: number
                name:
                  type: string
                  minLength: 1
    statusCodes.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                code: 1001
                name: SWITCHING_PROTOCOLS
            properties:
              code:
                type: number
              name:
                type: string
                minLength: 1
    permissions.request.create:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                customer: 'null'
                text: 'null'
                callback_uri: 'null'
                scope: string
                expires_in: '21600'
                failure_return_uri: 'null'
                success_return_uri: 'null'
                legal_terms_url: 'null'
            properties:
              customer:
                type: string
                minLength: 1
              text:
                type: string
                minLength: 1
              callback_uri:
                type: string
                minLength: 1
              scope:
                type: string
                minLength: 1
              expires_in:
                type: string
                minLength: 1
              failure_return_uri:
                type: string
                minLength: 1
              success_return_uri:
                type: string
                minLength: 1
              legal_terms_url:
                type: string
                minLength: 1
    pos.list:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                prev: null
                uris:
                  - 'https://api.sandbox.settle.eu/merchant/v1/pos/9469f42f/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/pos/9469f42f-8acf-43a8-ac28/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/pos/9469f42f-8acf-43a8-ac28-bb64c8a994bd/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/pos/loremIpsu/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/pos/mQ79T/'
                next: null
            properties:
              prev:
                type: string
                nullable: true
              uris:
                type: array
                items:
                  type: object
              next:
                type: string
                nullable: true
    pos.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                location:
                  latitude: 24.4686
                  longitude: -115.5839
                  accuracy: 1
                type: store
                id: 9469f42f
                name: Fantastic Granite Ball 3
            properties:
              location:
                type: object
                properties:
                  latitude:
                    type: number
                  longitude:
                    type: number
                  accuracy:
                    type: number
              type:
                type: string
                minLength: 1
              id:
                type: string
                minLength: 1
              name:
                type: string
                minLength: 1
    settlement.list:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                prev: null
                uris:
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/1/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/2/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/3/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/4/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/5/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/6/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/7/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/8/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/9/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/10/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/11/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/12/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/13/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/14/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/15/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/16/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/17/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/18/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/19/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/20/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/21/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/22/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/23/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/24/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/25/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/26/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/27/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/28/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/29/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/30/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/31/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/32/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/33/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/34/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/35/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/36/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/37/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/38/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/39/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/40/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/41/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/42/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/43/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/44/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/45/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/46/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/47/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/48/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/49/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/50/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/51/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/52/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/53/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/54/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/55/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/56/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/57/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/58/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/59/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/60/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/61/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/62/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/63/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/64/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/65/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/66/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/67/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/68/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/69/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/70/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/71/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/72/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/73/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/74/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/75/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/76/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/77/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/78/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/79/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/80/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/81/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/82/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/83/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/84/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/85/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/86/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/87/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/88/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/89/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/90/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/91/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/92/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/93/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/94/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/95/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/96/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/97/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/98/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/99/'
                  - 'https://api.sandbox.settle.eu/merchant/v1/settlement/100/'
                next: 'https://api.sandbox.settle.eu/merchant/v1/settlement/?start=101'
            properties:
              prev:
                type: string
              uris:
                type: array
                items:
                  type: object
              next:
                type: string
                minLength: 1
    settlement.get:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                payout_details:
                  payout: 0
                  gross: 0
                  invoice_id: null
                  unsettled_fees_before: -13
                  currency: NOK
                  unsettled_fees_after: -13
                  net: 0
                  billed: 0
                scope_log_uris:
                  - 'https://storage.googleapis.com/mcash_reports/permission_report_deprecated.csv?Expires=1644399559&GoogleAccessId=settle-core-demo%40appspot.gserviceaccount.com&Signature=SapXG1ddaM5PivbRCniHOfmhTzfy86221rvV41ET2Xp3ck6aE5TRIEA5aXwUPgpfXIR2DMhmwHpQOOrarRQvhNjbLx%2FiDr2ah%2FP8ZAbGAROJRfcHIs2nGQ0hlKoyTmjAcaVF4xmnp6IpLASYo%2FSvOibyGHPo5QPl1GSdDV8PcsRPev7HnkZnMpDKzetZpHfFfDYc0sTucqlS3o%2FQw11MJV7nGT%2FodocrFdwsJOHY7g%2Fejuo2g0PhnZpneztWOhXpmchaB36QjdNXoIHTi2azRKQi1vXG7Ox059iRbiyJum2asTp43ZPD95T%2Bnja2wjZlK34jlG%2FOFhUwhYh3Fv9FxQ%3D%3D'
                settlement_summary:
                  gross: 0
                  taxcode: 'NO:2013'
                  interchange: 0
                  additional_amount_total: 0
                  currency: NOK
                  fees:
                    settlement_fee: 0
                    transaction_fee_vat: 0
                    scope_fee_vat: 0
                    settlement_fee_vat: 0
                    scope_fee: 0
                    transaction_fee: 0
                  net: 0
                  amount_total: 0
                date_created: '2020-12-10 23:00:00'
                transaction_log_uris:
                  - 'https://storage.googleapis.com/settle-core-demo-m0816u6q_reports/settlement-5rg1dkk8-2020-12-09-4.csv?Expires=1644399559&GoogleAccessId=settle-core-demo%40appspot.gserviceaccount.com&Signature=BwE1zVa5ZBrhB%2Blh6cSuD3kiSOnIiJYRy5f5UhFTz6rbztCPtDRuka5%2BSpZwaFiZRiYUBzv9yVwTPDQBYMPbVwHWBfOnY%2FNz5ieGvFFKltxLwTNtNEvw53bm%2FOzsHuHfAkO9NT1kGA8sPVbz5%2FZZAJ3HMa%2F1n4L1kUwc1hVLbj2Au%2BmBT1tQ5%2FdwxC9D9fr6JJiSv7rd1HW4on0kdiJU%2FHaT%2BpDYcLe3qxk75xmwJGyY9jIABkMkId%2FR43TNAy8uPsM1nBXGnCxoAbZXMfhrx51l0C%2Btp0cR%2F%2BAVqYymyA6eiIGtZZt9UwTrPaBI9CviYM1AVKqf73aE4wjSbxh%2FaQ%3D%3D'
                id: '4'
            properties:
              payout_details:
                type: object
                properties:
                  payout:
                    type: number
                  gross:
                    type: number
                  invoice_id:
                    type: string
                  unsettled_fees_before:
                    type: number
                  currency:
                    type: string
                    minLength: 1
                  unsettled_fees_after:
                    type: number
                  net:
                    type: number
                  billed:
                    type: number
              scope_log_uris:
                type: array
                items:
                  type: object
              settlement_summary:
                type: object
                properties:
                  gross:
                    type: number
                  taxcode:
                    type: string
                    minLength: 1
                  interchange:
                    type: number
                  additional_amount_total:
                    type: number
                  currency:
                    type: string
                    minLength: 1
                  fees:
                    type: object
                    properties:
                      settlement_fee:
                        type: number
                      transaction_fee_vat:
                        type: number
                      scope_fee_vat:
                        type: number
                      settlement_fee_vat:
                        type: number
                      scope_fee:
                        type: number
                      transaction_fee:
                        type: number
                  net:
                    type: number
                  amount_total:
                    type: number
              date_created:
                type: string
                minLength: 1
              transaction_log_uris:
                type: array
                items:
                  type: object
              id:
                type: string
                minLength: 1
tags:
  - name: Authentication
  - name: Info
  - name: Balance
  - name: Logo
  - name: Payments
  - name: Pos
  - name: Sales
  - name: Settlement
  - name: Shortlink
  - name: Self Service Portal
  - name: Status Codes
  - name: Users
  - name: Permission Requests
x-settle-merchant: This header should contain the Settle ID of the merchant as listed in the Settle Business Portal.
x-settle-user: The ID (username) of the user / client making the request on behalf of the merchant. Users are created by the merchant through the Settle for Business portal or by the integrator using the user endpoint. Each user has a locally unique ID for the merchant and is assigned a shared secret and / or an RSA public key that is used for authentication.
x-settle-integrator: Only used as a replacement for the `X-Settle-User` header when integrators act as a proxy on behalf of merchant clients. The value of this field is the ID issued to the integrator by Settle. When this header is used only authentication using RSA signatures is allowed (and thus not secret) and Settle will check the signature against the public key of the integrator.
security: []
