openapi: 3.0.0
info:
  title: merchant
  version: '1.0'
  contact:
    name: Settle Group
    url: 'https://settle.eu'
    email: hello@settle.eu
  license:
    name: MIT
  description: Lorem ipsum
servers:
  - url: 'http://localhost:3000'
    description: Mock
  - url: 'https://api.settle.eu/merchant/v1'
    description: Production
  - url: 'https://api.sandbox.settle.eu/merchant/v1'
    description: Sandbox
paths:
  /payment_request:
    post:
      summary: merchant.payment.request.create
      operationId: merchant.payment.request.create
      responses:
        '200':
          description: 'OK, identical payment request already created.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  uri:
                    type: string
              examples: {}
        '201':
          description: 'OK, new payment request.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: 'Bad Request, validation error.'
        '409':
          description: 'Conflict, same pos_id and pos_tid used for a request earlier.'
      description: |-
        Create a Payment Request.

        The call is idempotent; that is, if one posts the same pos_id and pos_tid twice, only one payment request is created.
      parameters:
        - schema:
            type: string
            default: application/vnd.mcash.api.merchant.v1+json
          in: header
          name: Accept
          required: true
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            example: fzkmhy0q
          in: header
          name: X-Auka-Merchant
          required: true
          description: This header should contain the Settle ID of the merchant as returned in the id field of the merchant endpoint.
        - schema:
            type: string
            example: wtvrad79
          in: header
          name: X-Auka-User
          required: true
          description: The ID (username) of the user/client doing the request on behalf of the merchant. Users are created by the merchant through the Self Service Portal or by the integrator using the user endpoint. Each user has is an ID locally unique for the merchant and is assigned a shared secret and/or a RSA public key that is used for authentication.
        - schema:
            type: string
            example: '2021-03-28 18:06:05'
          in: header
          name: X-Auka-Timestamp
          required: true
          description: 'The current UTC time. The time format is YYYY-MM-DD hh:mm:ss.'
        - schema:
            type: string
            example: SHA256=47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=
          in: header
          name: X-Auka-Content-Digest
          required: true
          description: 'The base64 encoded hash digest of the request body. If the body is empty, the hash should be computed on an empty string. The value of the header should be on the form {algorithm (uppercase)}={digest value}.'
        - schema:
            type: string
            example: RSA-SHA256 R/O6YTy/QBgxHpNxSGCDKg8TKONtCof0jVDuqAkdLGsEdLrDQO7+9EZnDZ+x/Ce0e/F+dTfgbBujKN1zRoZzw2mlStIxTa9/kKTQ4IEZH+ym9z9dv6ZA+R17JN+/yT56O1O50pQbhIfk4ibln4bf3iwkodyP2fFIuBZ74CUeS0Q=
          in: header
          name: Authorization
          required: true
          description: The value of this field depends on what kind of authentication scheme is being used. Currently the supported schemes are SECRET and RSA-SHA256.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.create'
            examples:
              Example:
                value:
                  action: SALE
                  additional_amount: 0
                  additional_edit: false
                  allow_credit: true
                  amount: 0
                  callback_uri: 'null'
                  cid: 'null'
                  currency:
                    alph_code: 'null'
                    num_code: 3
                  customer: 'null'
                  display_message_uri: 'null'
                  expires_in: 21600
                  failure_return_uri: 'null'
                  line_items:
                    product_id: string
                    description: string
                    metadata:
                      key: string
                      value: string
                    vat_rate: 'null'
                    quantity: string
                    vat: 0
                    item_cost: 0
                    total: 0
                  links:
                    uri: 'null'
                    caption: 'null'
                    show_on: 'null'
                  max_scan_age: 60
                  pos_id: string
                  pos_tid: string
                  required_scope:
                    scopes: address
                  required_scope_text: 'null'
                  success_return_uri: 'null'
                  text: 'null'
                  uri: 'null'
                  'null': string
                  scope:
                    scopes: address
      tags:
        - Payments
    get:
      summary: ''
      operationId: merchant.payment.request.list
      responses:
        '200':
          $ref: '#/components/responses/payment.request.get'
      description: List Payment Requests
  '/payment_request/{tid}/outcome':
    parameters:
      - schema:
          type: string
        name: tid
        in: path
        required: true
        description: Transaction ID assigned by Settle.
    get:
      summary: merchant.payment.request.outcome.get
      responses: {}
      operationId: merchant.payment.request.outcome.get
      description: |-
        Shows the outcome info for a Payment Request, ReAuth or Capture.

        This endpoints includes specified fee and/or interchange that will be deducted from payout, and also updated additional amount field if the user added gratuity.

        If the callback URI registered for the payment request was secure (https), the contents of this form was sent along with the callback. If the callback URI was insecure, a notification pointing to this endpoint was sent instead.
      tags:
        - Payments
  '/payment_request/{tid}/':
    parameters:
      - schema:
          type: string
        name: tid
        in: path
        required: true
        description: Transaction ID assigned by Settle.
    put:
      summary: merchant.payment.request.update
      operationId: merchant.payment.request.update
      responses:
        '204':
          description: 'OK, (no content).'
        '400':
          description: 'Bad Request, illegal input.'
        '409':
          description: 'Conflict, illegal action at this time (capture before authorization, abort after capture).'
      description: |-
        Update, reauthorize, capture, release or abort payment request.

        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, additional_amount and capture_id twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action CAPTURE without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the REFUND action will require that the API call is made with the KEY authorization mode, not SECRET.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentOutcome'
      tags:
        - Payments
      parameters: []
    get:
      summary: ''
      operationId: merchant.payment.request.get
      responses:
        '200':
          description: OK
      description: Retrieve payment request info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment.request.get'
        description: Retrieve payment request info
components:
  schemas:
    payment.request.create:
      title: 'Request Body: merchant.payment.request.create'
      type: object
      x-tags:
        - Schemas
      description: 'A payment request goes through several stages. After being registered, the customer can either reject or authorize. An authorization is valid for 3 days, but can be reauthorized before it expires to be valid for 3 new days. Once authorized, it can be captured to be included in the next settlement.'
      x-examples:
        Example:
          action: SALE
          additional_amount: 0
          additional_edit: false
          allow_credit: true
          amount: 0
          callback_uri: 'null'
          cid: 'null'
          currency:
            alph_code: 'null'
            num_code: 3
          customer: 'null'
          display_message_uri: 'null'
          expires_in: 21600
          failure_return_uri: 'null'
          line_items:
            product_id: string
            description: string
            metadata:
              key: string
              value: string
            vat_rate: 'null'
            quantity: string
            vat: 0
            item_cost: 0
            total: 0
          links:
            uri: 'null'
            caption: 'null'
            show_on: 'null'
          max_scan_age: 60
          pos_id: string
          pos_tid: string
          required_scope:
            scopes: address
          required_scope_text: 'null'
          success_return_uri: 'null'
          text: 'null'
          uri: 'null'
          'null': string
          scope:
            scopes: address
      properties:
        action:
          type: string
          description: 'Action to perform, the main difference is what it looks like in App UI.'
          enum:
            - SALE
            - AUTH
            - sale
            - auth
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_edit:
          type: boolean
          default: false
          description: Whether user is allowed to additional amount for gratuity or similar.
        allow_credit:
          type: boolean
          description: Whether to allow credit payment for this payment request. Credit incurs interchange.
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        callback_uri:
          type: string
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the object part of the message is the same as what can be retrieved by calling GET on the /payment_request/{tid}/outcome/ resource URI.'
        cid:
          type: string
          default: 'null'
          description: Customer ID to be used for KID payments.
        currency:
          $ref: ../models/Currency.v1.yaml
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        display_message_uri:
          type: string
          description: Messages that can be used to inform the POS operator about the progress of the payment request will be posted to this URI if provided.
          default: 'null'
        expires_in:
          type: integer
          default: 21600
          minimum: 0
          maximum: 2592000
        failure_return_uri:
          type: string
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          description: Return URL if payment failed.
        line_items:
          $ref: ../models/LineItem.v1.yaml
        links:
          $ref: ../models/PaymentRequestLink.v1.yaml
        max_scan_age:
          type: integer
          description: 'Used if customer is set to shortlink_id:{ xxxx } or shortlink_sn:{ xxxx }. Integer number of seconds. The payment request will be assigned to the scantoken created on the shortlink_id or shortlink_sn, no earlier then this number of seconds ago.'
          default: 60
          minimum: 0
          maximum: 2592000
        pos_id:
          type: string
          description: 'The POS this payment request originates from, used for informing user about origin.'
          maxLength: 64
          pattern: '^[a-zA-Z0-9_.-]+$'
        pos_tid:
          type: string
          description: Local transaction id for POS. This must be unique for the POS.
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        required_scope:
          $ref: ../models/Scope.v1.yaml
        required_scope_text:
          type: string
          description: Text that is shown to user when asked for permission. This can contain line breaks and the text has to fit on smartphones screens.
          default: 'null'
          maxLength: 150
        success_return_uri:
          type: string
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          default: 'null'
          description: Return URL if payment successful.
        text:
          type: string
          description: Text that is shown to user when asked to pay. This can contain line breaks and the text has to fit on smartphones screens.
          default: 'null'
        uri:
          type: string
          description: 'If payment request was posted without a customer, user can claim it on this URI.'
          default: 'null'
        'null':
          type: string
        scope:
          $ref: ../models/Scope.v1.yaml
      required:
        - action
        - allow_credit
        - amount
        - currency
        - pos_id
        - pos_tid
    payment.request.outcome.get:
      title: 'Request Body: merchant.payment.request.outcome.get'
      type: object
      x-tags:
        - Schemas
      properties:
        id:
          type: string
      description: |-
        The Payment Request Outcome endpoint shows the outcome info for a Payment Request, ReAuth or Capture.

        This endpoints includes specified fee and/or interchange that will be deducted from payout, and also updated additional amount field if the user added gratuity.

        If the callback URI registered for the payment request was secure (https), the contents of this form was sent along with the callback. If the callback URI was insecure, a notification pointing to this endpoint was sent instead.
    payment.request.update:
      description: |-
        Capturing an authorized payment or reauthorizing is done with the action field.

        The call is idempotent; that is, if one posts the same amount, additional_amount and capture_id twice with action CAPTURE, only one capture is performed. Similarly, if one posts twice with action CAPTURE without any amount stated, to capture the full amount, only one full capture is performed.

        Note that the REFUND action will require that the API call is made with the KEY authorization mode, not SECRET.
      type: object
      x-tags:
        - Schemas
      properties:
        created_from:
          type: string
          minLength: 1
        created_to:
          type: string
          minLength: 1
        cursor:
          type: string
          minLength: 1
        page_size:
          type: string
          minLength: 1
        only_ok:
          type: string
          minLength: 1
        status:
          type: string
          minLength: 1
      required:
        - created_from
        - created_to
        - cursor
        - page_size
        - only_ok
        - status
      title: 'Request Body: merchant.payment.request.update'
    payment.request.list:
      title: 'Request Body: merchant.payment.request.get'
      type: object
      properties:
        created_from:
          $ref: ../models/DateTime.yaml
        created_to:
          $ref: ../models/DateTime.yaml
        cursor:
          $ref: ../models/Cursor.yaml
        page_size:
          type: integer
          default: 100
          description: Page Size
        only_ok:
          type: boolean
          default: false
          description: Only Ok
        status:
          $ref: ../models/SelectMultiple.yaml
    payment.request.get:
      title: 'Request Body: merchant.payment.request.get'
      type: object
      description: Retrieve payment request info
      properties:
        id:
          type: string
          description: Transaction ID
        uri:
          type: string
          description: 'If payment request was posted without a customer, user can claim it on this uri'
          format: uri
          default: 'null'
        display_message_uri:
          type: string
          description: Messages that can be used to inform the POS operator about the progress of the payment request will be POSTed to this URI if provided
          default: 'null'
          format: uri
        callback_uri:
          type: string
          description: 'If provided, Settle will POST to this URI when the status of the payment request changes, using the message mechanism described in the introduction. The data in the "object" part of the message is the same as what can be retrieved by calling GET on the "/payment_request/<tid>/outcome/" resource URI.'
          default: 'null'
          format: uri
        line_items:
          $ref: ../models/LineItem.v1.yaml
        customer:
          $ref: ../models/PersonIdentifier.v1.yaml
        max_scan_age:
          type: integer
          minimum: 0
          maximum: 2592000
          default: 60
          description: 'Used if customer is set to shortlink_id:xxxx or shortlink_sn:xxxx.Integer number of seconds.The payment request will be assigned to the scantoken created on the shortlink_idor shortlink_sn, no earlier then this number of seconds ago.'
        currency:
          $ref: ../models/Currency.v1.yaml
        amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_amount:
          $ref: ../models/MoneyInteger.v1.yaml
        additional_edit:
          type: boolean
          default: false
          description: Whether user is allowed to additional amount for gratuity or similar
        pos_id:
          type: string
          description: 'The POS this payment request originates from, used for informing user about origin'
          maxLength: 64
          pattern: '^[a-zA-Z0-9_.-]+$'
        pos_tid:
          type: string
          description: Local transaction id for POS. This must be unique for the POS
          pattern: '^[a-zA-Z0-9_.-]+$'
          maxLength: 64
        text:
          type: string
          description: Text that is shown to user when asked to pay. This can contain linebreaks and the text has tofit on smartphones screens.
          default: 'null'
        success_return_uri:
          type: string
          description: Return url if payment successful
          default: 'null'
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
        failure_return_uri:
          type: string
          description: |
            Return url if payment failed
          pattern: '(^|^w+://(localhost|[^/:]+|([0-9]{1,3}.){3}[0-9]{1,3})?(:[0-9]+)?)(/.*)?$'
          default: 'null'
        cid:
          type: string
          description: Customer ID to be used for KID payments
          default: 'null'
        links:
          $ref: ../models/PaymentRequestLink.v1.yaml
        date_expires:
          $ref: ../models/DateTime.yaml
        required_scope:
          type: string
          description: Set this field to ask for data from the user together with the payment request.
          default: 'null'
        allow_credit:
          type: boolean
          description: Whether to allow credit payment for this payment request. Credit incurs interchange
      required:
        - id
        - currency
        - pos_id
  responses:
    payment.request.list:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                $ref: ../models/PaymentRequestListItem.yaml
              cursor:
                $ref: ../models/Cursor.yaml
    payment.request.create:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: Transaction id
              uri:
                type: string
                default: 'null'
                format: uri
                description: 'If payment request was posted without a customer, user can claim it on this uri'
            required:
              - id
  securitySchemes: {}
  parameters: {}
tags:
  - name: Info
  - name: Balance
  - name: Logo
  - name: Payments
  - name: Pos
  - name: Sales
  - name: Settlement
  - name: Shortlink
  - name: Self Service Portal
  - name: Status Codes
  - name: Users
